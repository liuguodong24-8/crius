// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/member-account/member_account.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberId  string            `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	BranchId  string            `protobuf:"bytes,3,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	BaseValue int32             `protobuf:"varint,4,opt,name=base_value,json=baseValue,proto3" json:"base_value,omitempty"`
	GiftValue int32             `protobuf:"varint,5,opt,name=gift_value,json=giftValue,proto3" json:"gift_value,omitempty"`
	Products  []*ProductPackage `protobuf:"bytes,6,rep,name=products,proto3" json:"products,omitempty"`
	Packages  []*ProductPackage `protobuf:"bytes,7,rep,name=packages,proto3" json:"packages,omitempty"`
	Status    string            `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	TagId     string            `protobuf:"bytes,9,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	CreateAt  int32             `protobuf:"varint,10,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	Category  string            `protobuf:"bytes,11,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{0}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *Account) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *Account) GetBaseValue() int32 {
	if x != nil {
		return x.BaseValue
	}
	return 0
}

func (x *Account) GetGiftValue() int32 {
	if x != nil {
		return x.GiftValue
	}
	return 0
}

func (x *Account) GetProducts() []*ProductPackage {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *Account) GetPackages() []*ProductPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *Account) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Account) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

func (x *Account) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Account) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type AccountWithActionReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberId     string            `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	BranchId     string            `protobuf:"bytes,3,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	BaseValue    int32             `protobuf:"varint,4,opt,name=base_value,json=baseValue,proto3" json:"base_value,omitempty"`
	GiftValue    int32             `protobuf:"varint,5,opt,name=gift_value,json=giftValue,proto3" json:"gift_value,omitempty"`
	Products     []*ProductPackage `protobuf:"bytes,6,rep,name=products,proto3" json:"products,omitempty"`
	Packages     []*ProductPackage `protobuf:"bytes,7,rep,name=packages,proto3" json:"packages,omitempty"`
	Status       string            `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	TagId        string            `protobuf:"bytes,9,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	CreateAt     int32             `protobuf:"varint,10,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	ActionReason string            `protobuf:"bytes,11,opt,name=action_reason,json=actionReason,proto3" json:"action_reason,omitempty"`
	Category     string            `protobuf:"bytes,12,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *AccountWithActionReason) Reset() {
	*x = AccountWithActionReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountWithActionReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountWithActionReason) ProtoMessage() {}

func (x *AccountWithActionReason) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountWithActionReason.ProtoReflect.Descriptor instead.
func (*AccountWithActionReason) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{1}
}

func (x *AccountWithActionReason) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccountWithActionReason) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *AccountWithActionReason) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *AccountWithActionReason) GetBaseValue() int32 {
	if x != nil {
		return x.BaseValue
	}
	return 0
}

func (x *AccountWithActionReason) GetGiftValue() int32 {
	if x != nil {
		return x.GiftValue
	}
	return 0
}

func (x *AccountWithActionReason) GetProducts() []*ProductPackage {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *AccountWithActionReason) GetPackages() []*ProductPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *AccountWithActionReason) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AccountWithActionReason) GetTagId() string {
	if x != nil {
		return x.TagId
	}
	return ""
}

func (x *AccountWithActionReason) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *AccountWithActionReason) GetActionReason() string {
	if x != nil {
		return x.ActionReason
	}
	return ""
}

func (x *AccountWithActionReason) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type AccountList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Total    int32      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *AccountList) Reset() {
	*x = AccountList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountList) ProtoMessage() {}

func (x *AccountList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountList.ProtoReflect.Descriptor instead.
func (*AccountList) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{2}
}

func (x *AccountList) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *AccountList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Offset   int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit    int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetAccountsRequest) Reset() {
	*x = GetAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountsRequest) ProtoMessage() {}

func (x *GetAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetAccountsRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{3}
}

func (x *GetAccountsRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetAccountsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetAccountsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAccountsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32        `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string       `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *AccountList `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAccountsResponse) Reset() {
	*x = GetAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountsResponse) ProtoMessage() {}

func (x *GetAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetAccountsResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{4}
}

func (x *GetAccountsResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAccountsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAccountsResponse) GetData() *AccountList {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShowAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ShowAccountRequest) Reset() {
	*x = ShowAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowAccountRequest) ProtoMessage() {}

func (x *ShowAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowAccountRequest.ProtoReflect.Descriptor instead.
func (*ShowAccountRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{5}
}

func (x *ShowAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ShowAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32                    `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string                   `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *AccountWithActionReason `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShowAccountResponse) Reset() {
	*x = ShowAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowAccountResponse) ProtoMessage() {}

func (x *ShowAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowAccountResponse.ProtoReflect.Descriptor instead.
func (*ShowAccountResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{6}
}

func (x *ShowAccountResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ShowAccountResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ShowAccountResponse) GetData() *AccountWithActionReason {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAccountsByCardIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAccountsByCardIDRequest) Reset() {
	*x = GetAccountsByCardIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountsByCardIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountsByCardIDRequest) ProtoMessage() {}

func (x *GetAccountsByCardIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountsByCardIDRequest.ProtoReflect.Descriptor instead.
func (*GetAccountsByCardIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{7}
}

func (x *GetAccountsByCardIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAccountsByCardIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32             `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string            `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         []*AccountWithTag `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAccountsByCardIDResponse) Reset() {
	*x = GetAccountsByCardIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountsByCardIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountsByCardIDResponse) ProtoMessage() {}

func (x *GetAccountsByCardIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountsByCardIDResponse.ProtoReflect.Descriptor instead.
func (*GetAccountsByCardIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{8}
}

func (x *GetAccountsByCardIDResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAccountsByCardIDResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAccountsByCardIDResponse) GetData() []*AccountWithTag {
	if x != nil {
		return x.Data
	}
	return nil
}

type AccountWithTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	BranchIds []string `protobuf:"bytes,2,rep,name=branch_ids,json=branchIds,proto3" json:"branch_ids,omitempty"`
	TagName   string   `protobuf:"bytes,3,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
}

func (x *AccountWithTag) Reset() {
	*x = AccountWithTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountWithTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountWithTag) ProtoMessage() {}

func (x *AccountWithTag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountWithTag.ProtoReflect.Descriptor instead.
func (*AccountWithTag) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{9}
}

func (x *AccountWithTag) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AccountWithTag) GetBranchIds() []string {
	if x != nil {
		return x.BranchIds
	}
	return nil
}

func (x *AccountWithTag) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type UpdateAccountStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *UpdateAccountStatusRequest) Reset() {
	*x = UpdateAccountStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountStatusRequest) ProtoMessage() {}

func (x *UpdateAccountStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAccountStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAccountStatusRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *UpdateAccountStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type GetBillsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Category  string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Offset    int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetBillsRequest) Reset() {
	*x = GetBillsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBillsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBillsRequest) ProtoMessage() {}

func (x *GetBillsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBillsRequest.ProtoReflect.Descriptor instead.
func (*GetBillsRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{11}
}

func (x *GetBillsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetBillsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *GetBillsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetBillsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetBillsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32      `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string     `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *BillsData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBillsResponse) Reset() {
	*x = GetBillsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBillsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBillsResponse) ProtoMessage() {}

func (x *GetBillsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBillsResponse.ProtoReflect.Descriptor instead.
func (*GetBillsResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{12}
}

func (x *GetBillsResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetBillsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetBillsResponse) GetData() *BillsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type Bill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillCode       string            `protobuf:"bytes,1,opt,name=bill_code,json=billCode,proto3" json:"bill_code,omitempty"`
	CreateAt       int32             `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	Branch         string            `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	Packages       []*ProductPackage `protobuf:"bytes,4,rep,name=packages,proto3" json:"packages,omitempty"`
	CostBaseValue  int32             `protobuf:"varint,5,opt,name=cost_base_value,json=costBaseValue,proto3" json:"cost_base_value,omitempty"`
	CostGiftValue  int32             `protobuf:"varint,6,opt,name=cost_gift_value,json=costGiftValue,proto3" json:"cost_gift_value,omitempty"`
	Products       []*ProductPackage `protobuf:"bytes,7,rep,name=products,proto3" json:"products,omitempty"`
	CurrBaseValue  int32             `protobuf:"varint,8,opt,name=curr_base_value,json=currBaseValue,proto3" json:"curr_base_value,omitempty"`
	CurrGiftValue  int32             `protobuf:"varint,9,opt,name=curr_gift_value,json=currGiftValue,proto3" json:"curr_gift_value,omitempty"`
	ChangeCategory string            `protobuf:"bytes,10,opt,name=change_category,json=changeCategory,proto3" json:"change_category,omitempty"`
	Payments       *Payments         `protobuf:"bytes,11,opt,name=payments,proto3" json:"payments,omitempty"`
	StaffId        string            `protobuf:"bytes,12,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	Id             string            `protobuf:"bytes,13,opt,name=id,proto3" json:"id,omitempty"`
	BaseValueLeft  int32             `protobuf:"varint,14,opt,name=base_value_left,json=baseValueLeft,proto3" json:"base_value_left,omitempty"`
	GiftValueLeft  int32             `protobuf:"varint,15,opt,name=gift_value_left,json=giftValueLeft,proto3" json:"gift_value_left,omitempty"`
	CardId         string            `protobuf:"bytes,16,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	CardCode       string            `protobuf:"bytes,17,opt,name=card_code,json=cardCode,proto3" json:"card_code,omitempty"`
}

func (x *Bill) Reset() {
	*x = Bill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bill) ProtoMessage() {}

func (x *Bill) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bill.ProtoReflect.Descriptor instead.
func (*Bill) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{13}
}

func (x *Bill) GetBillCode() string {
	if x != nil {
		return x.BillCode
	}
	return ""
}

func (x *Bill) GetCreateAt() int32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Bill) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *Bill) GetPackages() []*ProductPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *Bill) GetCostBaseValue() int32 {
	if x != nil {
		return x.CostBaseValue
	}
	return 0
}

func (x *Bill) GetCostGiftValue() int32 {
	if x != nil {
		return x.CostGiftValue
	}
	return 0
}

func (x *Bill) GetProducts() []*ProductPackage {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *Bill) GetCurrBaseValue() int32 {
	if x != nil {
		return x.CurrBaseValue
	}
	return 0
}

func (x *Bill) GetCurrGiftValue() int32 {
	if x != nil {
		return x.CurrGiftValue
	}
	return 0
}

func (x *Bill) GetChangeCategory() string {
	if x != nil {
		return x.ChangeCategory
	}
	return ""
}

func (x *Bill) GetPayments() *Payments {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *Bill) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *Bill) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Bill) GetBaseValueLeft() int32 {
	if x != nil {
		return x.BaseValueLeft
	}
	return 0
}

func (x *Bill) GetGiftValueLeft() int32 {
	if x != nil {
		return x.GiftValueLeft
	}
	return 0
}

func (x *Bill) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *Bill) GetCardCode() string {
	if x != nil {
		return x.CardCode
	}
	return ""
}

type BillsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bills []*Bill `protobuf:"bytes,1,rep,name=bills,proto3" json:"bills,omitempty"`
	Total int32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *BillsData) Reset() {
	*x = BillsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillsData) ProtoMessage() {}

func (x *BillsData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillsData.ProtoReflect.Descriptor instead.
func (*BillsData) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{14}
}

func (x *BillsData) GetBills() []*Bill {
	if x != nil {
		return x.Bills
	}
	return nil
}

func (x *BillsData) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateAccountBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillCode  string                          `protobuf:"bytes,1,opt,name=bill_code,json=billCode,proto3" json:"bill_code,omitempty"`
	BranchId  string                          `protobuf:"bytes,2,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	BaseValue int32                           `protobuf:"varint,3,opt,name=base_value,json=baseValue,proto3" json:"base_value,omitempty"`
	GiftValue int32                           `protobuf:"varint,4,opt,name=gift_value,json=giftValue,proto3" json:"gift_value,omitempty"`
	Reason    string                          `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	Products  []*CostProductPackageTicketItem `protobuf:"bytes,6,rep,name=products,proto3" json:"products,omitempty"`
	Packages  []*CostProductPackageTicketItem `protobuf:"bytes,7,rep,name=packages,proto3" json:"packages,omitempty"`
}

func (x *UpdateAccountBalanceRequest) Reset() {
	*x = UpdateAccountBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountBalanceRequest) ProtoMessage() {}

func (x *UpdateAccountBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountBalanceRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateAccountBalanceRequest) GetBillCode() string {
	if x != nil {
		return x.BillCode
	}
	return ""
}

func (x *UpdateAccountBalanceRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *UpdateAccountBalanceRequest) GetBaseValue() int32 {
	if x != nil {
		return x.BaseValue
	}
	return 0
}

func (x *UpdateAccountBalanceRequest) GetGiftValue() int32 {
	if x != nil {
		return x.GiftValue
	}
	return 0
}

func (x *UpdateAccountBalanceRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UpdateAccountBalanceRequest) GetProducts() []*CostProductPackageTicketItem {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *UpdateAccountBalanceRequest) GetPackages() []*CostProductPackageTicketItem {
	if x != nil {
		return x.Packages
	}
	return nil
}

type AddAccountDeductionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillNumber string   `protobuf:"bytes,1,opt,name=bill_number,json=billNumber,proto3" json:"bill_number,omitempty"`
	CardId     string   `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	BranchId   string   `protobuf:"bytes,3,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	CostValue  int32    `protobuf:"varint,4,opt,name=cost_value,json=costValue,proto3" json:"cost_value,omitempty"`
	Reason     string   `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	AccountIds []string `protobuf:"bytes,6,rep,name=account_ids,json=accountIds,proto3" json:"account_ids,omitempty"`
}

func (x *AddAccountDeductionRequest) Reset() {
	*x = AddAccountDeductionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAccountDeductionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountDeductionRequest) ProtoMessage() {}

func (x *AddAccountDeductionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountDeductionRequest.ProtoReflect.Descriptor instead.
func (*AddAccountDeductionRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{16}
}

func (x *AddAccountDeductionRequest) GetBillNumber() string {
	if x != nil {
		return x.BillNumber
	}
	return ""
}

func (x *AddAccountDeductionRequest) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *AddAccountDeductionRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *AddAccountDeductionRequest) GetCostValue() int32 {
	if x != nil {
		return x.CostValue
	}
	return 0
}

func (x *AddAccountDeductionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AddAccountDeductionRequest) GetAccountIds() []string {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

type CardWithAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card     *Card      `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	Accounts []*Account `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *CardWithAccount) Reset() {
	*x = CardWithAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardWithAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardWithAccount) ProtoMessage() {}

func (x *CardWithAccount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardWithAccount.ProtoReflect.Descriptor instead.
func (*CardWithAccount) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{17}
}

func (x *CardWithAccount) GetCard() *Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *CardWithAccount) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type MemberAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*CardWithAccount `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *MemberAccount) Reset() {
	*x = MemberAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberAccount) ProtoMessage() {}

func (x *MemberAccount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberAccount.ProtoReflect.Descriptor instead.
func (*MemberAccount) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{18}
}

func (x *MemberAccount) GetCards() []*CardWithAccount {
	if x != nil {
		return x.Cards
	}
	return nil
}

type GetAccountByMemberIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *GetAccountByMemberIDRequest) Reset() {
	*x = GetAccountByMemberIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByMemberIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByMemberIDRequest) ProtoMessage() {}

func (x *GetAccountByMemberIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByMemberIDRequest.ProtoReflect.Descriptor instead.
func (*GetAccountByMemberIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{19}
}

func (x *GetAccountByMemberIDRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type GetAccountByCardCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardCode string `protobuf:"bytes,1,opt,name=card_code,json=cardCode,proto3" json:"card_code,omitempty"`
}

func (x *GetAccountByCardCodeRequest) Reset() {
	*x = GetAccountByCardCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByCardCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByCardCodeRequest) ProtoMessage() {}

func (x *GetAccountByCardCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByCardCodeRequest.ProtoReflect.Descriptor instead.
func (*GetAccountByCardCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{20}
}

func (x *GetAccountByCardCodeRequest) GetCardCode() string {
	if x != nil {
		return x.CardCode
	}
	return ""
}

type GetAccountByCardCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32            `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string           `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *CardWithAccount `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAccountByCardCodeResponse) Reset() {
	*x = GetAccountByCardCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountByCardCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByCardCodeResponse) ProtoMessage() {}

func (x *GetAccountByCardCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByCardCodeResponse.ProtoReflect.Descriptor instead.
func (*GetAccountByCardCodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{21}
}

func (x *GetAccountByCardCodeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetAccountByCardCodeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAccountByCardCodeResponse) GetData() *CardWithAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMemberAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32              `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string             `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         []*CardWithAccount `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMemberAccountResponse) Reset() {
	*x = GetMemberAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberAccountResponse) ProtoMessage() {}

func (x *GetMemberAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberAccountResponse.ProtoReflect.Descriptor instead.
func (*GetMemberAccountResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{22}
}

func (x *GetMemberAccountResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetMemberAccountResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetMemberAccountResponse) GetData() []*CardWithAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

type NoDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *NoDataResponse) Reset() {
	*x = NoDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoDataResponse) ProtoMessage() {}

func (x *NoDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoDataResponse.ProtoReflect.Descriptor instead.
func (*NoDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{23}
}

func (x *NoDataResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *NoDataResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ShowBillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillId string `protobuf:"bytes,1,opt,name=bill_id,json=billId,proto3" json:"bill_id,omitempty"`
}

func (x *ShowBillRequest) Reset() {
	*x = ShowBillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowBillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowBillRequest) ProtoMessage() {}

func (x *ShowBillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowBillRequest.ProtoReflect.Descriptor instead.
func (*ShowBillRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{24}
}

func (x *ShowBillRequest) GetBillId() string {
	if x != nil {
		return x.BillId
	}
	return ""
}

type ShowBillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *Bill  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShowBillResponse) Reset() {
	*x = ShowBillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowBillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowBillResponse) ProtoMessage() {}

func (x *ShowBillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowBillResponse.ProtoReflect.Descriptor instead.
func (*ShowBillResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{25}
}

func (x *ShowBillResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ShowBillResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ShowBillResponse) GetData() *Bill {
	if x != nil {
		return x.Data
	}
	return nil
}

type TransferCardBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceAccountId string `protobuf:"bytes,1,opt,name=source_account_id,json=sourceAccountId,proto3" json:"source_account_id,omitempty"`
	DestCardId      string `protobuf:"bytes,2,opt,name=dest_card_id,json=destCardId,proto3" json:"dest_card_id,omitempty"`
	Amount          int32  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	OperateBranchId string `protobuf:"bytes,6,opt,name=operate_branch_id,json=operateBranchId,proto3" json:"operate_branch_id,omitempty"`
}

func (x *TransferCardBalanceRequest) Reset() {
	*x = TransferCardBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCardBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCardBalanceRequest) ProtoMessage() {}

func (x *TransferCardBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCardBalanceRequest.ProtoReflect.Descriptor instead.
func (*TransferCardBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{26}
}

func (x *TransferCardBalanceRequest) GetSourceAccountId() string {
	if x != nil {
		return x.SourceAccountId
	}
	return ""
}

func (x *TransferCardBalanceRequest) GetDestCardId() string {
	if x != nil {
		return x.DestCardId
	}
	return ""
}

func (x *TransferCardBalanceRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferCardBalanceRequest) GetOperateBranchId() string {
	if x != nil {
		return x.OperateBranchId
	}
	return ""
}

type ShowBillByCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BillCode string `protobuf:"bytes,1,opt,name=bill_code,json=billCode,proto3" json:"bill_code,omitempty"`
}

func (x *ShowBillByCodeRequest) Reset() {
	*x = ShowBillByCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowBillByCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowBillByCodeRequest) ProtoMessage() {}

func (x *ShowBillByCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowBillByCodeRequest.ProtoReflect.Descriptor instead.
func (*ShowBillByCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{27}
}

func (x *ShowBillByCodeRequest) GetBillCode() string {
	if x != nil {
		return x.BillCode
	}
	return ""
}

type ShowBillByCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *Bill  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShowBillByCodeResponse) Reset() {
	*x = ShowBillByCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowBillByCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowBillByCodeResponse) ProtoMessage() {}

func (x *ShowBillByCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowBillByCodeResponse.ProtoReflect.Descriptor instead.
func (*ShowBillByCodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{28}
}

func (x *ShowBillByCodeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ShowBillByCodeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ShowBillByCodeResponse) GetData() *Bill {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMemberAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *GetMemberAccountsRequest) Reset() {
	*x = GetMemberAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberAccountsRequest) ProtoMessage() {}

func (x *GetMemberAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetMemberAccountsRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{29}
}

func (x *GetMemberAccountsRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type GetMemberAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32      `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string     `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         []*Account `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMemberAccountsResponse) Reset() {
	*x = GetMemberAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberAccountsResponse) ProtoMessage() {}

func (x *GetMemberAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetMemberAccountsResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{30}
}

func (x *GetMemberAccountsResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetMemberAccountsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetMemberAccountsResponse) GetData() []*Account {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchCardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardCode string `protobuf:"bytes,1,opt,name=card_code,json=cardCode,proto3" json:"card_code,omitempty"`
}

func (x *SearchCardsRequest) Reset() {
	*x = SearchCardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCardsRequest) ProtoMessage() {}

func (x *SearchCardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCardsRequest.ProtoReflect.Descriptor instead.
func (*SearchCardsRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{31}
}

func (x *SearchCardsRequest) GetCardCode() string {
	if x != nil {
		return x.CardCode
	}
	return ""
}

type SearchCardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32              `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string             `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         []*CardWithAccount `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SearchCardsResponse) Reset() {
	*x = SearchCardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_account_member_account_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCardsResponse) ProtoMessage() {}

func (x *SearchCardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_account_member_account_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCardsResponse.ProtoReflect.Descriptor instead.
func (*SearchCardsResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_account_member_account_proto_rawDescGZIP(), []int{32}
}

func (x *SearchCardsResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *SearchCardsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SearchCardsResponse) GetData() []*CardWithAccount {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_member_account_member_account_proto protoreflect.FileDescriptor

var file_proto_member_account_member_account_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef,
	0x02, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x39, 0x0a,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x22, 0xa4, 0x03, 0x0a, 0x17, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12,
	0x39, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x57, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x77, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x24, 0x0a, 0x12, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x13,
	0x53, 0x68, 0x6f, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x94, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x61, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x67, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x7a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x84, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xfd, 0x04, 0x0a, 0x04, 0x42, 0x69, 0x6c, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x67, 0x69,
	0x66, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x63, 0x6f, 0x73, 0x74, 0x47, 0x69, 0x66, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x42, 0x61, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x47,
	0x69, 0x66, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x6c, 0x65, 0x66, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x69, 0x66,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x67, 0x69, 0x66, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x65, 0x66,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4c, 0x0a, 0x09, 0x42, 0x69, 0x6c, 0x6c, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x05, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x52, 0x05, 0x62, 0x69, 0x6c, 0x6c, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xbf, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x47,
	0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x6c,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x6e, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72,
	0x64, 0x12, 0x32, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x45, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x3a, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x92, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x57, 0x69, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x54, 0x0a, 0x0e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x77,
	0x42, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x62,
	0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69,
	0x6c, 0x6c, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x69,
	0x6c, 0x6c, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x85, 0x01, 0x0a,
	0x16, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x69, 0x6c, 0x6c, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8b, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x12, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8d,
	0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xac,
	0x18, 0x0a, 0x13, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x08, 0x4d, 0x61, 0x6b, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x61, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6e, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x43, 0x61, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x62, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x61, 0x6e, 0x6b, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x25, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x61, 0x6e, 0x6b, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x42, 0x6c, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x08, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x27, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x72,
	0x64, 0x42, 0x79, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x72, 0x64, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x61,
	0x72, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x61, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x43, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x51, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x21, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x14, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0b, 0x53, 0x68, 0x6f,
	0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x61, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x13, 0x41, 0x64, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x12, 0x27, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42,
	0x69, 0x6c, 0x6c, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x77, 0x42,
	0x69, 0x6c, 0x6c, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x69,
	0x6c, 0x6c, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x69, 0x6c,
	0x6c, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53,
	0x68, 0x6f, 0x77, 0x42, 0x69, 0x6c, 0x6c, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42,
	0x69, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x26,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x69, 0x6c,
	0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x42, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2f, 0x5a,
	0x0d, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xca, 0x02,
	0x1d, 0x4f, 0x6d, 0x79, 0x5c, 0x43, 0x72, 0x69, 0x75, 0x73, 0x5c, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_member_account_member_account_proto_rawDescOnce sync.Once
	file_proto_member_account_member_account_proto_rawDescData = file_proto_member_account_member_account_proto_rawDesc
)

func file_proto_member_account_member_account_proto_rawDescGZIP() []byte {
	file_proto_member_account_member_account_proto_rawDescOnce.Do(func() {
		file_proto_member_account_member_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_member_account_member_account_proto_rawDescData)
	})
	return file_proto_member_account_member_account_proto_rawDescData
}

var file_proto_member_account_member_account_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_proto_member_account_member_account_proto_goTypes = []interface{}{
	(*Account)(nil),                      // 0: memberAccount.Account
	(*AccountWithActionReason)(nil),      // 1: memberAccount.AccountWithActionReason
	(*AccountList)(nil),                  // 2: memberAccount.AccountList
	(*GetAccountsRequest)(nil),           // 3: memberAccount.GetAccountsRequest
	(*GetAccountsResponse)(nil),          // 4: memberAccount.GetAccountsResponse
	(*ShowAccountRequest)(nil),           // 5: memberAccount.ShowAccountRequest
	(*ShowAccountResponse)(nil),          // 6: memberAccount.ShowAccountResponse
	(*GetAccountsByCardIDRequest)(nil),   // 7: memberAccount.GetAccountsByCardIDRequest
	(*GetAccountsByCardIDResponse)(nil),  // 8: memberAccount.GetAccountsByCardIDResponse
	(*AccountWithTag)(nil),               // 9: memberAccount.AccountWithTag
	(*UpdateAccountStatusRequest)(nil),   // 10: memberAccount.UpdateAccountStatusRequest
	(*GetBillsRequest)(nil),              // 11: memberAccount.GetBillsRequest
	(*GetBillsResponse)(nil),             // 12: memberAccount.GetBillsResponse
	(*Bill)(nil),                         // 13: memberAccount.Bill
	(*BillsData)(nil),                    // 14: memberAccount.BillsData
	(*UpdateAccountBalanceRequest)(nil),  // 15: memberAccount.UpdateAccountBalanceRequest
	(*AddAccountDeductionRequest)(nil),   // 16: memberAccount.AddAccountDeductionRequest
	(*CardWithAccount)(nil),              // 17: memberAccount.CardWithAccount
	(*MemberAccount)(nil),                // 18: memberAccount.MemberAccount
	(*GetAccountByMemberIDRequest)(nil),  // 19: memberAccount.GetAccountByMemberIDRequest
	(*GetAccountByCardCodeRequest)(nil),  // 20: memberAccount.GetAccountByCardCodeRequest
	(*GetAccountByCardCodeResponse)(nil), // 21: memberAccount.GetAccountByCardCodeResponse
	(*GetMemberAccountResponse)(nil),     // 22: memberAccount.GetMemberAccountResponse
	(*NoDataResponse)(nil),               // 23: memberAccount.NoDataResponse
	(*ShowBillRequest)(nil),              // 24: memberAccount.ShowBillRequest
	(*ShowBillResponse)(nil),             // 25: memberAccount.ShowBillResponse
	(*TransferCardBalanceRequest)(nil),   // 26: memberAccount.TransferCardBalanceRequest
	(*ShowBillByCodeRequest)(nil),        // 27: memberAccount.ShowBillByCodeRequest
	(*ShowBillByCodeResponse)(nil),       // 28: memberAccount.ShowBillByCodeResponse
	(*GetMemberAccountsRequest)(nil),     // 29: memberAccount.GetMemberAccountsRequest
	(*GetMemberAccountsResponse)(nil),    // 30: memberAccount.GetMemberAccountsResponse
	(*SearchCardsRequest)(nil),           // 31: memberAccount.SearchCardsRequest
	(*SearchCardsResponse)(nil),          // 32: memberAccount.SearchCardsResponse
	(*ProductPackage)(nil),               // 33: memberAccount.ProductPackage
	(*Payments)(nil),                     // 34: memberAccount.Payments
	(*CostProductPackageTicketItem)(nil), // 35: memberAccount.CostProductPackageTicketItem
	(*Card)(nil),                         // 36: memberAccount.Card
	(*MakeCardRequest)(nil),              // 37: memberAccount.MakeCardRequest
	(*ActivePrimaryCardRequest)(nil),     // 38: memberAccount.ActivePrimaryCardRequest
	(*ActiveSecondaryCardRequest)(nil),   // 39: memberAccount.ActiveSecondaryCardRequest
	(*ActiveBlankCardRequest)(nil),       // 40: memberAccount.ActiveBlankCardRequest
	(*RechargeCardRequest)(nil),          // 41: memberAccount.RechargeCardRequest
	(*BindCardRequest)(nil),              // 42: memberAccount.BindCardRequest
	(*GetCardsRequest)(nil),              // 43: memberAccount.GetCardsRequest
	(*GetCardsByAccountRequest)(nil),     // 44: memberAccount.GetCardsByAccountRequest
	(*ShowCardRequest)(nil),              // 45: memberAccount.ShowCardRequest
	(*ShowCardByIDRequest)(nil),          // 46: memberAccount.ShowCardByIDRequest
	(*UpdateCardStatusRequest)(nil),      // 47: memberAccount.UpdateCardStatusRequest
	(*ReplaceCardRequest)(nil),           // 48: memberAccount.ReplaceCardRequest
	(*CancelCardRequest)(nil),            // 49: memberAccount.CancelCardRequest
	(*ValidateCardPasswordRequest)(nil),  // 50: memberAccount.ValidateCardPasswordRequest
	(*ReportPaymentRequest)(nil),         // 51: memberAccount.ReportPaymentRequest
	(*ReportBillDetailRequest)(nil),      // 52: memberAccount.ReportBillDetailRequest
	(*ConsumeRequest)(nil),               // 53: memberAccount.ConsumeRequest
	(*RefundBillRequest)(nil),            // 54: memberAccount.RefundBillRequest
	(*MakeCardResponse)(nil),             // 55: memberAccount.MakeCardResponse
	(*ActivePrimaryCardResponse)(nil),    // 56: memberAccount.ActivePrimaryCardResponse
	(*ActiveSecondaryCardResponse)(nil),  // 57: memberAccount.ActiveSecondaryCardResponse
	(*ActiveBlankCardResponse)(nil),      // 58: memberAccount.ActiveBlankCardResponse
	(*RechargeCardResponse)(nil),         // 59: memberAccount.RechargeCardResponse
	(*BindCardResponse)(nil),             // 60: memberAccount.BindCardResponse
	(*GetCardsResponse)(nil),             // 61: memberAccount.GetCardsResponse
	(*GetCardsByAccountResponse)(nil),    // 62: memberAccount.GetCardsByAccountResponse
	(*ShowCardResponse)(nil),             // 63: memberAccount.ShowCardResponse
	(*ShowCardByIDResponse)(nil),         // 64: memberAccount.ShowCardByIDResponse
	(*ReportPaymentResponse)(nil),        // 65: memberAccount.ReportPaymentResponse
	(*ReportPromotionResponse)(nil),      // 66: memberAccount.ReportPromotionResponse
	(*ReportBillDetailResponse)(nil),     // 67: memberAccount.ReportBillDetailResponse
}
var file_proto_member_account_member_account_proto_depIdxs = []int32{
	33, // 0: memberAccount.Account.products:type_name -> memberAccount.ProductPackage
	33, // 1: memberAccount.Account.packages:type_name -> memberAccount.ProductPackage
	33, // 2: memberAccount.AccountWithActionReason.products:type_name -> memberAccount.ProductPackage
	33, // 3: memberAccount.AccountWithActionReason.packages:type_name -> memberAccount.ProductPackage
	0,  // 4: memberAccount.AccountList.accounts:type_name -> memberAccount.Account
	2,  // 5: memberAccount.GetAccountsResponse.data:type_name -> memberAccount.AccountList
	1,  // 6: memberAccount.ShowAccountResponse.data:type_name -> memberAccount.AccountWithActionReason
	9,  // 7: memberAccount.GetAccountsByCardIDResponse.data:type_name -> memberAccount.AccountWithTag
	0,  // 8: memberAccount.AccountWithTag.account:type_name -> memberAccount.Account
	14, // 9: memberAccount.GetBillsResponse.data:type_name -> memberAccount.BillsData
	33, // 10: memberAccount.Bill.packages:type_name -> memberAccount.ProductPackage
	33, // 11: memberAccount.Bill.products:type_name -> memberAccount.ProductPackage
	34, // 12: memberAccount.Bill.payments:type_name -> memberAccount.Payments
	13, // 13: memberAccount.BillsData.bills:type_name -> memberAccount.Bill
	35, // 14: memberAccount.UpdateAccountBalanceRequest.products:type_name -> memberAccount.CostProductPackageTicketItem
	35, // 15: memberAccount.UpdateAccountBalanceRequest.packages:type_name -> memberAccount.CostProductPackageTicketItem
	36, // 16: memberAccount.CardWithAccount.card:type_name -> memberAccount.Card
	0,  // 17: memberAccount.CardWithAccount.accounts:type_name -> memberAccount.Account
	17, // 18: memberAccount.MemberAccount.cards:type_name -> memberAccount.CardWithAccount
	17, // 19: memberAccount.GetAccountByCardCodeResponse.data:type_name -> memberAccount.CardWithAccount
	17, // 20: memberAccount.GetMemberAccountResponse.data:type_name -> memberAccount.CardWithAccount
	13, // 21: memberAccount.ShowBillResponse.data:type_name -> memberAccount.Bill
	13, // 22: memberAccount.ShowBillByCodeResponse.data:type_name -> memberAccount.Bill
	0,  // 23: memberAccount.GetMemberAccountsResponse.data:type_name -> memberAccount.Account
	17, // 24: memberAccount.SearchCardsResponse.data:type_name -> memberAccount.CardWithAccount
	37, // 25: memberAccount.MemberAccountServer.MakeCard:input_type -> memberAccount.MakeCardRequest
	38, // 26: memberAccount.MemberAccountServer.ActivePrimaryCard:input_type -> memberAccount.ActivePrimaryCardRequest
	39, // 27: memberAccount.MemberAccountServer.ActiveSecondaryCard:input_type -> memberAccount.ActiveSecondaryCardRequest
	40, // 28: memberAccount.MemberAccountServer.ActiveBlankCard:input_type -> memberAccount.ActiveBlankCardRequest
	41, // 29: memberAccount.MemberAccountServer.RechargeCard:input_type -> memberAccount.RechargeCardRequest
	42, // 30: memberAccount.MemberAccountServer.BindCard:input_type -> memberAccount.BindCardRequest
	43, // 31: memberAccount.MemberAccountServer.GetCards:input_type -> memberAccount.GetCardsRequest
	44, // 32: memberAccount.MemberAccountServer.GetCardsByAccount:input_type -> memberAccount.GetCardsByAccountRequest
	45, // 33: memberAccount.MemberAccountServer.ShowCard:input_type -> memberAccount.ShowCardRequest
	46, // 34: memberAccount.MemberAccountServer.ShowCardByID:input_type -> memberAccount.ShowCardByIDRequest
	26, // 35: memberAccount.MemberAccountServer.TransferCardBalance:input_type -> memberAccount.TransferCardBalanceRequest
	47, // 36: memberAccount.MemberAccountServer.UpdateCardStatus:input_type -> memberAccount.UpdateCardStatusRequest
	48, // 37: memberAccount.MemberAccountServer.ReplaceCard:input_type -> memberAccount.ReplaceCardRequest
	49, // 38: memberAccount.MemberAccountServer.CancelCard:input_type -> memberAccount.CancelCardRequest
	50, // 39: memberAccount.MemberAccountServer.ValidateCardPassword:input_type -> memberAccount.ValidateCardPasswordRequest
	31, // 40: memberAccount.MemberAccountServer.SearchCards:input_type -> memberAccount.SearchCardsRequest
	7,  // 41: memberAccount.MemberAccountServer.GetAccountsByCardID:input_type -> memberAccount.GetAccountsByCardIDRequest
	3,  // 42: memberAccount.MemberAccountServer.GetAccounts:input_type -> memberAccount.GetAccountsRequest
	5,  // 43: memberAccount.MemberAccountServer.ShowAccount:input_type -> memberAccount.ShowAccountRequest
	10, // 44: memberAccount.MemberAccountServer.UpdateAccountStatus:input_type -> memberAccount.UpdateAccountStatusRequest
	15, // 45: memberAccount.MemberAccountServer.UpdateAccountBalance:input_type -> memberAccount.UpdateAccountBalanceRequest
	16, // 46: memberAccount.MemberAccountServer.AddAccountDeduction:input_type -> memberAccount.AddAccountDeductionRequest
	29, // 47: memberAccount.MemberAccountServer.GetMemberAccounts:input_type -> memberAccount.GetMemberAccountsRequest
	19, // 48: memberAccount.MemberAccountServer.GetAccountByMemberID:input_type -> memberAccount.GetAccountByMemberIDRequest
	20, // 49: memberAccount.MemberAccountServer.GetAccountByCardCode:input_type -> memberAccount.GetAccountByCardCodeRequest
	11, // 50: memberAccount.MemberAccountServer.GetBills:input_type -> memberAccount.GetBillsRequest
	24, // 51: memberAccount.MemberAccountServer.ShowBill:input_type -> memberAccount.ShowBillRequest
	27, // 52: memberAccount.MemberAccountServer.ShowBillByCode:input_type -> memberAccount.ShowBillByCodeRequest
	51, // 53: memberAccount.MemberAccountServer.ReportPayment:input_type -> memberAccount.ReportPaymentRequest
	52, // 54: memberAccount.MemberAccountServer.ReportPromotion:input_type -> memberAccount.ReportBillDetailRequest
	52, // 55: memberAccount.MemberAccountServer.ReportBillDetail:input_type -> memberAccount.ReportBillDetailRequest
	53, // 56: memberAccount.MemberAccountServer.Consume:input_type -> memberAccount.ConsumeRequest
	54, // 57: memberAccount.MemberAccountServer.RefundBill:input_type -> memberAccount.RefundBillRequest
	55, // 58: memberAccount.MemberAccountServer.MakeCard:output_type -> memberAccount.MakeCardResponse
	56, // 59: memberAccount.MemberAccountServer.ActivePrimaryCard:output_type -> memberAccount.ActivePrimaryCardResponse
	57, // 60: memberAccount.MemberAccountServer.ActiveSecondaryCard:output_type -> memberAccount.ActiveSecondaryCardResponse
	58, // 61: memberAccount.MemberAccountServer.ActiveBlankCard:output_type -> memberAccount.ActiveBlankCardResponse
	59, // 62: memberAccount.MemberAccountServer.RechargeCard:output_type -> memberAccount.RechargeCardResponse
	60, // 63: memberAccount.MemberAccountServer.BindCard:output_type -> memberAccount.BindCardResponse
	61, // 64: memberAccount.MemberAccountServer.GetCards:output_type -> memberAccount.GetCardsResponse
	62, // 65: memberAccount.MemberAccountServer.GetCardsByAccount:output_type -> memberAccount.GetCardsByAccountResponse
	63, // 66: memberAccount.MemberAccountServer.ShowCard:output_type -> memberAccount.ShowCardResponse
	64, // 67: memberAccount.MemberAccountServer.ShowCardByID:output_type -> memberAccount.ShowCardByIDResponse
	23, // 68: memberAccount.MemberAccountServer.TransferCardBalance:output_type -> memberAccount.NoDataResponse
	23, // 69: memberAccount.MemberAccountServer.UpdateCardStatus:output_type -> memberAccount.NoDataResponse
	23, // 70: memberAccount.MemberAccountServer.ReplaceCard:output_type -> memberAccount.NoDataResponse
	23, // 71: memberAccount.MemberAccountServer.CancelCard:output_type -> memberAccount.NoDataResponse
	23, // 72: memberAccount.MemberAccountServer.ValidateCardPassword:output_type -> memberAccount.NoDataResponse
	32, // 73: memberAccount.MemberAccountServer.SearchCards:output_type -> memberAccount.SearchCardsResponse
	8,  // 74: memberAccount.MemberAccountServer.GetAccountsByCardID:output_type -> memberAccount.GetAccountsByCardIDResponse
	4,  // 75: memberAccount.MemberAccountServer.GetAccounts:output_type -> memberAccount.GetAccountsResponse
	6,  // 76: memberAccount.MemberAccountServer.ShowAccount:output_type -> memberAccount.ShowAccountResponse
	23, // 77: memberAccount.MemberAccountServer.UpdateAccountStatus:output_type -> memberAccount.NoDataResponse
	23, // 78: memberAccount.MemberAccountServer.UpdateAccountBalance:output_type -> memberAccount.NoDataResponse
	23, // 79: memberAccount.MemberAccountServer.AddAccountDeduction:output_type -> memberAccount.NoDataResponse
	30, // 80: memberAccount.MemberAccountServer.GetMemberAccounts:output_type -> memberAccount.GetMemberAccountsResponse
	22, // 81: memberAccount.MemberAccountServer.GetAccountByMemberID:output_type -> memberAccount.GetMemberAccountResponse
	21, // 82: memberAccount.MemberAccountServer.GetAccountByCardCode:output_type -> memberAccount.GetAccountByCardCodeResponse
	12, // 83: memberAccount.MemberAccountServer.GetBills:output_type -> memberAccount.GetBillsResponse
	25, // 84: memberAccount.MemberAccountServer.ShowBill:output_type -> memberAccount.ShowBillResponse
	28, // 85: memberAccount.MemberAccountServer.ShowBillByCode:output_type -> memberAccount.ShowBillByCodeResponse
	65, // 86: memberAccount.MemberAccountServer.ReportPayment:output_type -> memberAccount.ReportPaymentResponse
	66, // 87: memberAccount.MemberAccountServer.ReportPromotion:output_type -> memberAccount.ReportPromotionResponse
	67, // 88: memberAccount.MemberAccountServer.ReportBillDetail:output_type -> memberAccount.ReportBillDetailResponse
	23, // 89: memberAccount.MemberAccountServer.Consume:output_type -> memberAccount.NoDataResponse
	23, // 90: memberAccount.MemberAccountServer.RefundBill:output_type -> memberAccount.NoDataResponse
	58, // [58:91] is the sub-list for method output_type
	25, // [25:58] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_proto_member_account_member_account_proto_init() }
func file_proto_member_account_member_account_proto_init() {
	if File_proto_member_account_member_account_proto != nil {
		return
	}
	file_proto_member_account_card_proto_init()
	file_proto_member_account_report_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_member_account_member_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountWithActionReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountsByCardIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountsByCardIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountWithTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBillsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBillsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAccountDeductionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardWithAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByMemberIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByCardCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountByCardCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowBillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowBillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCardBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowBillByCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowBillByCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_account_member_account_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_member_account_member_account_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_member_account_member_account_proto_goTypes,
		DependencyIndexes: file_proto_member_account_member_account_proto_depIdxs,
		MessageInfos:      file_proto_member_account_member_account_proto_msgTypes,
	}.Build()
	File_proto_member_account_member_account_proto = out.File
	file_proto_member_account_member_account_proto_rawDesc = nil
	file_proto_member_account_member_account_proto_goTypes = nil
	file_proto_member_account_member_account_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MemberAccountServerClient is the client API for MemberAccountServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MemberAccountServerClient interface {
	MakeCard(ctx context.Context, in *MakeCardRequest, opts ...grpc.CallOption) (*MakeCardResponse, error)
	ActivePrimaryCard(ctx context.Context, in *ActivePrimaryCardRequest, opts ...grpc.CallOption) (*ActivePrimaryCardResponse, error)
	ActiveSecondaryCard(ctx context.Context, in *ActiveSecondaryCardRequest, opts ...grpc.CallOption) (*ActiveSecondaryCardResponse, error)
	ActiveBlankCard(ctx context.Context, in *ActiveBlankCardRequest, opts ...grpc.CallOption) (*ActiveBlankCardResponse, error)
	RechargeCard(ctx context.Context, in *RechargeCardRequest, opts ...grpc.CallOption) (*RechargeCardResponse, error)
	BindCard(ctx context.Context, in *BindCardRequest, opts ...grpc.CallOption) (*BindCardResponse, error)
	GetCards(ctx context.Context, in *GetCardsRequest, opts ...grpc.CallOption) (*GetCardsResponse, error)
	GetCardsByAccount(ctx context.Context, in *GetCardsByAccountRequest, opts ...grpc.CallOption) (*GetCardsByAccountResponse, error)
	ShowCard(ctx context.Context, in *ShowCardRequest, opts ...grpc.CallOption) (*ShowCardResponse, error)
	ShowCardByID(ctx context.Context, in *ShowCardByIDRequest, opts ...grpc.CallOption) (*ShowCardByIDResponse, error)
	TransferCardBalance(ctx context.Context, in *TransferCardBalanceRequest, opts ...grpc.CallOption) (*NoDataResponse, error)
	UpdateCardStatus(ctx context.Context, in *UpdateCardStatusRequest, opts ...grpc.CallOption) (*NoDataResponse, error)
	ReplaceCard(ctx context.Context, in *ReplaceCardRequest, opts ...grpc.CallOption) (*NoDataResponse, error)
	CancelCard(ctx context.Context, in *CancelCardRequest, opts ...grpc.CallOption) (*NoDataResponse, error)
	ValidateCardPassword(ctx context.Context, in *ValidateCardPasswordRequest, opts ...grpc.CallOption) (*NoDataResponse, error)
	SearchCards(ctx context.Context, in *SearchCardsRequest, opts ...grpc.CallOption) (*SearchCardsResponse, error)
	GetAccountsByCardID(ctx context.Context, in *GetAccountsByCardIDRequest, opts ...grpc.CallOption) (*GetAccountsByCardIDResponse, error)
	GetAccounts(ctx context.Context, in *GetAccountsRequest, opts ...grpc.CallOption) (*GetAccountsResponse, error)
	ShowAccount(ctx context.Context, in *ShowAccountRequest, opts ...grpc.CallOption) (*ShowAccountResponse, error)
	UpdateAccountStatus(ctx context.Context, in *UpdateAccountStatusRequest, opts ...grpc.CallOption) (*NoDataResponse, error)
	UpdateAccountBalance(ctx context.Context, in *UpdateAccountBalanceRequest, opts ...grpc.CallOption) (*NoDataResponse, error)
	AddAccountDeduction(ctx context.Context, in *AddAccountDeductionRequest, opts ...grpc.CallOption) (*NoDataResponse, error)
	GetMemberAccounts(ctx context.Context, in *GetMemberAccountsRequest, opts ...grpc.CallOption) (*GetMemberAccountsResponse, error)
	GetAccountByMemberID(ctx context.Context, in *GetAccountByMemberIDRequest, opts ...grpc.CallOption) (*GetMemberAccountResponse, error)
	GetAccountByCardCode(ctx context.Context, in *GetAccountByCardCodeRequest, opts ...grpc.CallOption) (*GetAccountByCardCodeResponse, error)
	GetBills(ctx context.Context, in *GetBillsRequest, opts ...grpc.CallOption) (*GetBillsResponse, error)
	ShowBill(ctx context.Context, in *ShowBillRequest, opts ...grpc.CallOption) (*ShowBillResponse, error)
	ShowBillByCode(ctx context.Context, in *ShowBillByCodeRequest, opts ...grpc.CallOption) (*ShowBillByCodeResponse, error)
	// ReportPayment 收款汇总 开卡充值收款方式汇总
	ReportPayment(ctx context.Context, in *ReportPaymentRequest, opts ...grpc.CallOption) (*ReportPaymentResponse, error)
	// ReportPromotion 按优惠方案汇总
	ReportPromotion(ctx context.Context, in *ReportBillDetailRequest, opts ...grpc.CallOption) (*ReportPromotionResponse, error)
	// ReportBillDetail 开卡/充值 详情
	ReportBillDetail(ctx context.Context, in *ReportBillDetailRequest, opts ...grpc.CallOption) (*ReportBillDetailResponse, error)
	// Consume 消费
	Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (*NoDataResponse, error)
	// RefundBill 退款
	RefundBill(ctx context.Context, in *RefundBillRequest, opts ...grpc.CallOption) (*NoDataResponse, error)
}

type memberAccountServerClient struct {
	cc grpc.ClientConnInterface
}

func NewMemberAccountServerClient(cc grpc.ClientConnInterface) MemberAccountServerClient {
	return &memberAccountServerClient{cc}
}

func (c *memberAccountServerClient) MakeCard(ctx context.Context, in *MakeCardRequest, opts ...grpc.CallOption) (*MakeCardResponse, error) {
	out := new(MakeCardResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/MakeCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ActivePrimaryCard(ctx context.Context, in *ActivePrimaryCardRequest, opts ...grpc.CallOption) (*ActivePrimaryCardResponse, error) {
	out := new(ActivePrimaryCardResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ActivePrimaryCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ActiveSecondaryCard(ctx context.Context, in *ActiveSecondaryCardRequest, opts ...grpc.CallOption) (*ActiveSecondaryCardResponse, error) {
	out := new(ActiveSecondaryCardResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ActiveSecondaryCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ActiveBlankCard(ctx context.Context, in *ActiveBlankCardRequest, opts ...grpc.CallOption) (*ActiveBlankCardResponse, error) {
	out := new(ActiveBlankCardResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ActiveBlankCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) RechargeCard(ctx context.Context, in *RechargeCardRequest, opts ...grpc.CallOption) (*RechargeCardResponse, error) {
	out := new(RechargeCardResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/RechargeCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) BindCard(ctx context.Context, in *BindCardRequest, opts ...grpc.CallOption) (*BindCardResponse, error) {
	out := new(BindCardResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/BindCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) GetCards(ctx context.Context, in *GetCardsRequest, opts ...grpc.CallOption) (*GetCardsResponse, error) {
	out := new(GetCardsResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/GetCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) GetCardsByAccount(ctx context.Context, in *GetCardsByAccountRequest, opts ...grpc.CallOption) (*GetCardsByAccountResponse, error) {
	out := new(GetCardsByAccountResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/GetCardsByAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ShowCard(ctx context.Context, in *ShowCardRequest, opts ...grpc.CallOption) (*ShowCardResponse, error) {
	out := new(ShowCardResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ShowCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ShowCardByID(ctx context.Context, in *ShowCardByIDRequest, opts ...grpc.CallOption) (*ShowCardByIDResponse, error) {
	out := new(ShowCardByIDResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ShowCardByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) TransferCardBalance(ctx context.Context, in *TransferCardBalanceRequest, opts ...grpc.CallOption) (*NoDataResponse, error) {
	out := new(NoDataResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/TransferCardBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) UpdateCardStatus(ctx context.Context, in *UpdateCardStatusRequest, opts ...grpc.CallOption) (*NoDataResponse, error) {
	out := new(NoDataResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/UpdateCardStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ReplaceCard(ctx context.Context, in *ReplaceCardRequest, opts ...grpc.CallOption) (*NoDataResponse, error) {
	out := new(NoDataResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ReplaceCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) CancelCard(ctx context.Context, in *CancelCardRequest, opts ...grpc.CallOption) (*NoDataResponse, error) {
	out := new(NoDataResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/CancelCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ValidateCardPassword(ctx context.Context, in *ValidateCardPasswordRequest, opts ...grpc.CallOption) (*NoDataResponse, error) {
	out := new(NoDataResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ValidateCardPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) SearchCards(ctx context.Context, in *SearchCardsRequest, opts ...grpc.CallOption) (*SearchCardsResponse, error) {
	out := new(SearchCardsResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/SearchCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) GetAccountsByCardID(ctx context.Context, in *GetAccountsByCardIDRequest, opts ...grpc.CallOption) (*GetAccountsByCardIDResponse, error) {
	out := new(GetAccountsByCardIDResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/GetAccountsByCardID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) GetAccounts(ctx context.Context, in *GetAccountsRequest, opts ...grpc.CallOption) (*GetAccountsResponse, error) {
	out := new(GetAccountsResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/GetAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ShowAccount(ctx context.Context, in *ShowAccountRequest, opts ...grpc.CallOption) (*ShowAccountResponse, error) {
	out := new(ShowAccountResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ShowAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) UpdateAccountStatus(ctx context.Context, in *UpdateAccountStatusRequest, opts ...grpc.CallOption) (*NoDataResponse, error) {
	out := new(NoDataResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/UpdateAccountStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) UpdateAccountBalance(ctx context.Context, in *UpdateAccountBalanceRequest, opts ...grpc.CallOption) (*NoDataResponse, error) {
	out := new(NoDataResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/UpdateAccountBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) AddAccountDeduction(ctx context.Context, in *AddAccountDeductionRequest, opts ...grpc.CallOption) (*NoDataResponse, error) {
	out := new(NoDataResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/AddAccountDeduction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) GetMemberAccounts(ctx context.Context, in *GetMemberAccountsRequest, opts ...grpc.CallOption) (*GetMemberAccountsResponse, error) {
	out := new(GetMemberAccountsResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/GetMemberAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) GetAccountByMemberID(ctx context.Context, in *GetAccountByMemberIDRequest, opts ...grpc.CallOption) (*GetMemberAccountResponse, error) {
	out := new(GetMemberAccountResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/GetAccountByMemberID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) GetAccountByCardCode(ctx context.Context, in *GetAccountByCardCodeRequest, opts ...grpc.CallOption) (*GetAccountByCardCodeResponse, error) {
	out := new(GetAccountByCardCodeResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/GetAccountByCardCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) GetBills(ctx context.Context, in *GetBillsRequest, opts ...grpc.CallOption) (*GetBillsResponse, error) {
	out := new(GetBillsResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/GetBills", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ShowBill(ctx context.Context, in *ShowBillRequest, opts ...grpc.CallOption) (*ShowBillResponse, error) {
	out := new(ShowBillResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ShowBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ShowBillByCode(ctx context.Context, in *ShowBillByCodeRequest, opts ...grpc.CallOption) (*ShowBillByCodeResponse, error) {
	out := new(ShowBillByCodeResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ShowBillByCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ReportPayment(ctx context.Context, in *ReportPaymentRequest, opts ...grpc.CallOption) (*ReportPaymentResponse, error) {
	out := new(ReportPaymentResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ReportPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ReportPromotion(ctx context.Context, in *ReportBillDetailRequest, opts ...grpc.CallOption) (*ReportPromotionResponse, error) {
	out := new(ReportPromotionResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ReportPromotion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) ReportBillDetail(ctx context.Context, in *ReportBillDetailRequest, opts ...grpc.CallOption) (*ReportBillDetailResponse, error) {
	out := new(ReportBillDetailResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/ReportBillDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (*NoDataResponse, error) {
	out := new(NoDataResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/Consume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAccountServerClient) RefundBill(ctx context.Context, in *RefundBillRequest, opts ...grpc.CallOption) (*NoDataResponse, error) {
	out := new(NoDataResponse)
	err := c.cc.Invoke(ctx, "/memberAccount.MemberAccountServer/RefundBill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MemberAccountServerServer is the server API for MemberAccountServer service.
type MemberAccountServerServer interface {
	MakeCard(context.Context, *MakeCardRequest) (*MakeCardResponse, error)
	ActivePrimaryCard(context.Context, *ActivePrimaryCardRequest) (*ActivePrimaryCardResponse, error)
	ActiveSecondaryCard(context.Context, *ActiveSecondaryCardRequest) (*ActiveSecondaryCardResponse, error)
	ActiveBlankCard(context.Context, *ActiveBlankCardRequest) (*ActiveBlankCardResponse, error)
	RechargeCard(context.Context, *RechargeCardRequest) (*RechargeCardResponse, error)
	BindCard(context.Context, *BindCardRequest) (*BindCardResponse, error)
	GetCards(context.Context, *GetCardsRequest) (*GetCardsResponse, error)
	GetCardsByAccount(context.Context, *GetCardsByAccountRequest) (*GetCardsByAccountResponse, error)
	ShowCard(context.Context, *ShowCardRequest) (*ShowCardResponse, error)
	ShowCardByID(context.Context, *ShowCardByIDRequest) (*ShowCardByIDResponse, error)
	TransferCardBalance(context.Context, *TransferCardBalanceRequest) (*NoDataResponse, error)
	UpdateCardStatus(context.Context, *UpdateCardStatusRequest) (*NoDataResponse, error)
	ReplaceCard(context.Context, *ReplaceCardRequest) (*NoDataResponse, error)
	CancelCard(context.Context, *CancelCardRequest) (*NoDataResponse, error)
	ValidateCardPassword(context.Context, *ValidateCardPasswordRequest) (*NoDataResponse, error)
	SearchCards(context.Context, *SearchCardsRequest) (*SearchCardsResponse, error)
	GetAccountsByCardID(context.Context, *GetAccountsByCardIDRequest) (*GetAccountsByCardIDResponse, error)
	GetAccounts(context.Context, *GetAccountsRequest) (*GetAccountsResponse, error)
	ShowAccount(context.Context, *ShowAccountRequest) (*ShowAccountResponse, error)
	UpdateAccountStatus(context.Context, *UpdateAccountStatusRequest) (*NoDataResponse, error)
	UpdateAccountBalance(context.Context, *UpdateAccountBalanceRequest) (*NoDataResponse, error)
	AddAccountDeduction(context.Context, *AddAccountDeductionRequest) (*NoDataResponse, error)
	GetMemberAccounts(context.Context, *GetMemberAccountsRequest) (*GetMemberAccountsResponse, error)
	GetAccountByMemberID(context.Context, *GetAccountByMemberIDRequest) (*GetMemberAccountResponse, error)
	GetAccountByCardCode(context.Context, *GetAccountByCardCodeRequest) (*GetAccountByCardCodeResponse, error)
	GetBills(context.Context, *GetBillsRequest) (*GetBillsResponse, error)
	ShowBill(context.Context, *ShowBillRequest) (*ShowBillResponse, error)
	ShowBillByCode(context.Context, *ShowBillByCodeRequest) (*ShowBillByCodeResponse, error)
	// ReportPayment 收款汇总 开卡充值收款方式汇总
	ReportPayment(context.Context, *ReportPaymentRequest) (*ReportPaymentResponse, error)
	// ReportPromotion 按优惠方案汇总
	ReportPromotion(context.Context, *ReportBillDetailRequest) (*ReportPromotionResponse, error)
	// ReportBillDetail 开卡/充值 详情
	ReportBillDetail(context.Context, *ReportBillDetailRequest) (*ReportBillDetailResponse, error)
	// Consume 消费
	Consume(context.Context, *ConsumeRequest) (*NoDataResponse, error)
	// RefundBill 退款
	RefundBill(context.Context, *RefundBillRequest) (*NoDataResponse, error)
}

// UnimplementedMemberAccountServerServer can be embedded to have forward compatible implementations.
type UnimplementedMemberAccountServerServer struct {
}

func (*UnimplementedMemberAccountServerServer) MakeCard(context.Context, *MakeCardRequest) (*MakeCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeCard not implemented")
}
func (*UnimplementedMemberAccountServerServer) ActivePrimaryCard(context.Context, *ActivePrimaryCardRequest) (*ActivePrimaryCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivePrimaryCard not implemented")
}
func (*UnimplementedMemberAccountServerServer) ActiveSecondaryCard(context.Context, *ActiveSecondaryCardRequest) (*ActiveSecondaryCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActiveSecondaryCard not implemented")
}
func (*UnimplementedMemberAccountServerServer) ActiveBlankCard(context.Context, *ActiveBlankCardRequest) (*ActiveBlankCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActiveBlankCard not implemented")
}
func (*UnimplementedMemberAccountServerServer) RechargeCard(context.Context, *RechargeCardRequest) (*RechargeCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RechargeCard not implemented")
}
func (*UnimplementedMemberAccountServerServer) BindCard(context.Context, *BindCardRequest) (*BindCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindCard not implemented")
}
func (*UnimplementedMemberAccountServerServer) GetCards(context.Context, *GetCardsRequest) (*GetCardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCards not implemented")
}
func (*UnimplementedMemberAccountServerServer) GetCardsByAccount(context.Context, *GetCardsByAccountRequest) (*GetCardsByAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCardsByAccount not implemented")
}
func (*UnimplementedMemberAccountServerServer) ShowCard(context.Context, *ShowCardRequest) (*ShowCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowCard not implemented")
}
func (*UnimplementedMemberAccountServerServer) ShowCardByID(context.Context, *ShowCardByIDRequest) (*ShowCardByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowCardByID not implemented")
}
func (*UnimplementedMemberAccountServerServer) TransferCardBalance(context.Context, *TransferCardBalanceRequest) (*NoDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferCardBalance not implemented")
}
func (*UnimplementedMemberAccountServerServer) UpdateCardStatus(context.Context, *UpdateCardStatusRequest) (*NoDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCardStatus not implemented")
}
func (*UnimplementedMemberAccountServerServer) ReplaceCard(context.Context, *ReplaceCardRequest) (*NoDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplaceCard not implemented")
}
func (*UnimplementedMemberAccountServerServer) CancelCard(context.Context, *CancelCardRequest) (*NoDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelCard not implemented")
}
func (*UnimplementedMemberAccountServerServer) ValidateCardPassword(context.Context, *ValidateCardPasswordRequest) (*NoDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateCardPassword not implemented")
}
func (*UnimplementedMemberAccountServerServer) SearchCards(context.Context, *SearchCardsRequest) (*SearchCardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchCards not implemented")
}
func (*UnimplementedMemberAccountServerServer) GetAccountsByCardID(context.Context, *GetAccountsByCardIDRequest) (*GetAccountsByCardIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountsByCardID not implemented")
}
func (*UnimplementedMemberAccountServerServer) GetAccounts(context.Context, *GetAccountsRequest) (*GetAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccounts not implemented")
}
func (*UnimplementedMemberAccountServerServer) ShowAccount(context.Context, *ShowAccountRequest) (*ShowAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowAccount not implemented")
}
func (*UnimplementedMemberAccountServerServer) UpdateAccountStatus(context.Context, *UpdateAccountStatusRequest) (*NoDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccountStatus not implemented")
}
func (*UnimplementedMemberAccountServerServer) UpdateAccountBalance(context.Context, *UpdateAccountBalanceRequest) (*NoDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccountBalance not implemented")
}
func (*UnimplementedMemberAccountServerServer) AddAccountDeduction(context.Context, *AddAccountDeductionRequest) (*NoDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAccountDeduction not implemented")
}
func (*UnimplementedMemberAccountServerServer) GetMemberAccounts(context.Context, *GetMemberAccountsRequest) (*GetMemberAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMemberAccounts not implemented")
}
func (*UnimplementedMemberAccountServerServer) GetAccountByMemberID(context.Context, *GetAccountByMemberIDRequest) (*GetMemberAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountByMemberID not implemented")
}
func (*UnimplementedMemberAccountServerServer) GetAccountByCardCode(context.Context, *GetAccountByCardCodeRequest) (*GetAccountByCardCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountByCardCode not implemented")
}
func (*UnimplementedMemberAccountServerServer) GetBills(context.Context, *GetBillsRequest) (*GetBillsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBills not implemented")
}
func (*UnimplementedMemberAccountServerServer) ShowBill(context.Context, *ShowBillRequest) (*ShowBillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowBill not implemented")
}
func (*UnimplementedMemberAccountServerServer) ShowBillByCode(context.Context, *ShowBillByCodeRequest) (*ShowBillByCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowBillByCode not implemented")
}
func (*UnimplementedMemberAccountServerServer) ReportPayment(context.Context, *ReportPaymentRequest) (*ReportPaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportPayment not implemented")
}
func (*UnimplementedMemberAccountServerServer) ReportPromotion(context.Context, *ReportBillDetailRequest) (*ReportPromotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportPromotion not implemented")
}
func (*UnimplementedMemberAccountServerServer) ReportBillDetail(context.Context, *ReportBillDetailRequest) (*ReportBillDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportBillDetail not implemented")
}
func (*UnimplementedMemberAccountServerServer) Consume(context.Context, *ConsumeRequest) (*NoDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Consume not implemented")
}
func (*UnimplementedMemberAccountServerServer) RefundBill(context.Context, *RefundBillRequest) (*NoDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefundBill not implemented")
}

func RegisterMemberAccountServerServer(s *grpc.Server, srv MemberAccountServerServer) {
	s.RegisterService(&_MemberAccountServer_serviceDesc, srv)
}

func _MemberAccountServer_MakeCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).MakeCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/MakeCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).MakeCard(ctx, req.(*MakeCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ActivePrimaryCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivePrimaryCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ActivePrimaryCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ActivePrimaryCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ActivePrimaryCard(ctx, req.(*ActivePrimaryCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ActiveSecondaryCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActiveSecondaryCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ActiveSecondaryCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ActiveSecondaryCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ActiveSecondaryCard(ctx, req.(*ActiveSecondaryCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ActiveBlankCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActiveBlankCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ActiveBlankCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ActiveBlankCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ActiveBlankCard(ctx, req.(*ActiveBlankCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_RechargeCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RechargeCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).RechargeCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/RechargeCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).RechargeCard(ctx, req.(*RechargeCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_BindCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).BindCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/BindCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).BindCard(ctx, req.(*BindCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_GetCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).GetCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/GetCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).GetCards(ctx, req.(*GetCardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_GetCardsByAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardsByAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).GetCardsByAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/GetCardsByAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).GetCardsByAccount(ctx, req.(*GetCardsByAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ShowCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ShowCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ShowCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ShowCard(ctx, req.(*ShowCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ShowCardByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowCardByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ShowCardByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ShowCardByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ShowCardByID(ctx, req.(*ShowCardByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_TransferCardBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferCardBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).TransferCardBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/TransferCardBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).TransferCardBalance(ctx, req.(*TransferCardBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_UpdateCardStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCardStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).UpdateCardStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/UpdateCardStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).UpdateCardStatus(ctx, req.(*UpdateCardStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ReplaceCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ReplaceCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ReplaceCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ReplaceCard(ctx, req.(*ReplaceCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_CancelCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).CancelCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/CancelCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).CancelCard(ctx, req.(*CancelCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ValidateCardPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateCardPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ValidateCardPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ValidateCardPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ValidateCardPassword(ctx, req.(*ValidateCardPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_SearchCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchCardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).SearchCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/SearchCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).SearchCards(ctx, req.(*SearchCardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_GetAccountsByCardID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountsByCardIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).GetAccountsByCardID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/GetAccountsByCardID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).GetAccountsByCardID(ctx, req.(*GetAccountsByCardIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_GetAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).GetAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/GetAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).GetAccounts(ctx, req.(*GetAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ShowAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ShowAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ShowAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ShowAccount(ctx, req.(*ShowAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_UpdateAccountStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccountStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).UpdateAccountStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/UpdateAccountStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).UpdateAccountStatus(ctx, req.(*UpdateAccountStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_UpdateAccountBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccountBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).UpdateAccountBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/UpdateAccountBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).UpdateAccountBalance(ctx, req.(*UpdateAccountBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_AddAccountDeduction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAccountDeductionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).AddAccountDeduction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/AddAccountDeduction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).AddAccountDeduction(ctx, req.(*AddAccountDeductionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_GetMemberAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMemberAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).GetMemberAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/GetMemberAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).GetMemberAccounts(ctx, req.(*GetMemberAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_GetAccountByMemberID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountByMemberIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).GetAccountByMemberID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/GetAccountByMemberID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).GetAccountByMemberID(ctx, req.(*GetAccountByMemberIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_GetAccountByCardCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountByCardCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).GetAccountByCardCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/GetAccountByCardCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).GetAccountByCardCode(ctx, req.(*GetAccountByCardCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_GetBills_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBillsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).GetBills(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/GetBills",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).GetBills(ctx, req.(*GetBillsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ShowBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowBillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ShowBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ShowBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ShowBill(ctx, req.(*ShowBillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ShowBillByCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowBillByCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ShowBillByCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ShowBillByCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ShowBillByCode(ctx, req.(*ShowBillByCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ReportPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ReportPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ReportPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ReportPayment(ctx, req.(*ReportPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ReportPromotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportBillDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ReportPromotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ReportPromotion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ReportPromotion(ctx, req.(*ReportBillDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_ReportBillDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportBillDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).ReportBillDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/ReportBillDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).ReportBillDetail(ctx, req.(*ReportBillDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_Consume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConsumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).Consume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/Consume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).Consume(ctx, req.(*ConsumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAccountServer_RefundBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefundBillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAccountServerServer).RefundBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberAccount.MemberAccountServer/RefundBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAccountServerServer).RefundBill(ctx, req.(*RefundBillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MemberAccountServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "memberAccount.MemberAccountServer",
	HandlerType: (*MemberAccountServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakeCard",
			Handler:    _MemberAccountServer_MakeCard_Handler,
		},
		{
			MethodName: "ActivePrimaryCard",
			Handler:    _MemberAccountServer_ActivePrimaryCard_Handler,
		},
		{
			MethodName: "ActiveSecondaryCard",
			Handler:    _MemberAccountServer_ActiveSecondaryCard_Handler,
		},
		{
			MethodName: "ActiveBlankCard",
			Handler:    _MemberAccountServer_ActiveBlankCard_Handler,
		},
		{
			MethodName: "RechargeCard",
			Handler:    _MemberAccountServer_RechargeCard_Handler,
		},
		{
			MethodName: "BindCard",
			Handler:    _MemberAccountServer_BindCard_Handler,
		},
		{
			MethodName: "GetCards",
			Handler:    _MemberAccountServer_GetCards_Handler,
		},
		{
			MethodName: "GetCardsByAccount",
			Handler:    _MemberAccountServer_GetCardsByAccount_Handler,
		},
		{
			MethodName: "ShowCard",
			Handler:    _MemberAccountServer_ShowCard_Handler,
		},
		{
			MethodName: "ShowCardByID",
			Handler:    _MemberAccountServer_ShowCardByID_Handler,
		},
		{
			MethodName: "TransferCardBalance",
			Handler:    _MemberAccountServer_TransferCardBalance_Handler,
		},
		{
			MethodName: "UpdateCardStatus",
			Handler:    _MemberAccountServer_UpdateCardStatus_Handler,
		},
		{
			MethodName: "ReplaceCard",
			Handler:    _MemberAccountServer_ReplaceCard_Handler,
		},
		{
			MethodName: "CancelCard",
			Handler:    _MemberAccountServer_CancelCard_Handler,
		},
		{
			MethodName: "ValidateCardPassword",
			Handler:    _MemberAccountServer_ValidateCardPassword_Handler,
		},
		{
			MethodName: "SearchCards",
			Handler:    _MemberAccountServer_SearchCards_Handler,
		},
		{
			MethodName: "GetAccountsByCardID",
			Handler:    _MemberAccountServer_GetAccountsByCardID_Handler,
		},
		{
			MethodName: "GetAccounts",
			Handler:    _MemberAccountServer_GetAccounts_Handler,
		},
		{
			MethodName: "ShowAccount",
			Handler:    _MemberAccountServer_ShowAccount_Handler,
		},
		{
			MethodName: "UpdateAccountStatus",
			Handler:    _MemberAccountServer_UpdateAccountStatus_Handler,
		},
		{
			MethodName: "UpdateAccountBalance",
			Handler:    _MemberAccountServer_UpdateAccountBalance_Handler,
		},
		{
			MethodName: "AddAccountDeduction",
			Handler:    _MemberAccountServer_AddAccountDeduction_Handler,
		},
		{
			MethodName: "GetMemberAccounts",
			Handler:    _MemberAccountServer_GetMemberAccounts_Handler,
		},
		{
			MethodName: "GetAccountByMemberID",
			Handler:    _MemberAccountServer_GetAccountByMemberID_Handler,
		},
		{
			MethodName: "GetAccountByCardCode",
			Handler:    _MemberAccountServer_GetAccountByCardCode_Handler,
		},
		{
			MethodName: "GetBills",
			Handler:    _MemberAccountServer_GetBills_Handler,
		},
		{
			MethodName: "ShowBill",
			Handler:    _MemberAccountServer_ShowBill_Handler,
		},
		{
			MethodName: "ShowBillByCode",
			Handler:    _MemberAccountServer_ShowBillByCode_Handler,
		},
		{
			MethodName: "ReportPayment",
			Handler:    _MemberAccountServer_ReportPayment_Handler,
		},
		{
			MethodName: "ReportPromotion",
			Handler:    _MemberAccountServer_ReportPromotion_Handler,
		},
		{
			MethodName: "ReportBillDetail",
			Handler:    _MemberAccountServer_ReportBillDetail_Handler,
		},
		{
			MethodName: "Consume",
			Handler:    _MemberAccountServer_Consume_Handler,
		},
		{
			MethodName: "RefundBill",
			Handler:    _MemberAccountServer_RefundBill_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/member-account/member_account.proto",
}
