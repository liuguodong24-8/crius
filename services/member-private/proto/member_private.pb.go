// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/member-private/member_private.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateStatusRequest) Reset() {
	*x = UpdateStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_private_member_private_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusRequest) ProtoMessage() {}

func (x *UpdateStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_private_member_private_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_member_private_member_private_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *UpdateStatusResponse) Reset() {
	*x = UpdateStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_member_private_member_private_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusResponse) ProtoMessage() {}

func (x *UpdateStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_member_private_member_private_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_member_private_member_private_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateStatusResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateStatusResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_proto_member_private_member_private_proto protoreflect.FileDescriptor

var file_proto_member_private_member_private_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x1a, 0x24, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2d, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5a, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xc1, 0x0a, 0x0a, 0x13, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x5c,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c,
	0x0a, 0x0d, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x53, 0x68, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x13, 0x53, 0x68, 0x6f, 0x77, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x53,
	0x68, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x26, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x68, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x53, 0x68, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x68, 0x69, 0x66,
	0x74, 0x12, 0x24, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x68, 0x69, 0x66, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x53, 0x68, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x68, 0x69, 0x66,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x68,
	0x69, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x53, 0x68, 0x69, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2f, 0x5a, 0x0d, 0x2e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xca, 0x02, 0x1d, 0x4f, 0x6d,
	0x79, 0x5c, 0x43, 0x72, 0x69, 0x75, 0x73, 0x5c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_member_private_member_private_proto_rawDescOnce sync.Once
	file_proto_member_private_member_private_proto_rawDescData = file_proto_member_private_member_private_proto_rawDesc
)

func file_proto_member_private_member_private_proto_rawDescGZIP() []byte {
	file_proto_member_private_member_private_proto_rawDescOnce.Do(func() {
		file_proto_member_private_member_private_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_member_private_member_private_proto_rawDescData)
	})
	return file_proto_member_private_member_private_proto_rawDescData
}

var file_proto_member_private_member_private_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_member_private_member_private_proto_goTypes = []interface{}{
	(*UpdateStatusRequest)(nil),          // 0: memberPrivate.UpdateStatusRequest
	(*UpdateStatusResponse)(nil),         // 1: memberPrivate.UpdateStatusResponse
	(*ListPromotionRequest)(nil),         // 2: memberPrivate.ListPromotionRequest
	(*CreatePromotionRequest)(nil),       // 3: memberPrivate.CreatePromotionRequest
	(*UpdatePromotionRequest)(nil),       // 4: memberPrivate.UpdatePromotionRequest
	(*ShowPromotionRequest)(nil),         // 5: memberPrivate.ShowPromotionRequest
	(*ListPromotionOptionRequest)(nil),   // 6: memberPrivate.ListPromotionOptionRequest
	(*CreatePromotionOptionRequest)(nil), // 7: memberPrivate.CreatePromotionOptionRequest
	(*ShowPromotionOptionRequest)(nil),   // 8: memberPrivate.ShowPromotionOptionRequest
	(*UpdatePromotionOptionRequest)(nil), // 9: memberPrivate.UpdatePromotionOptionRequest
	(*CreateStaffShiftRequest)(nil),      // 10: memberPrivate.CreateStaffShiftRequest
	(*ListStaffShiftRequest)(nil),        // 11: memberPrivate.ListStaffShiftRequest
	(*GetStaffShiftTimeRequest)(nil),     // 12: memberPrivate.GetStaffShiftTimeRequest
	(*ListPromotionResponse)(nil),        // 13: memberPrivate.ListPromotionResponse
	(*CreatePromotionResponse)(nil),      // 14: memberPrivate.CreatePromotionResponse
	(*PromotionResponse)(nil),            // 15: memberPrivate.PromotionResponse
	(*ShowPromotionResponse)(nil),        // 16: memberPrivate.ShowPromotionResponse
	(*ListPromotionOptionResponse)(nil),  // 17: memberPrivate.ListPromotionOptionResponse
	(*OptionResponse)(nil),               // 18: memberPrivate.OptionResponse
	(*ShowPromotionOptionResponse)(nil),  // 19: memberPrivate.ShowPromotionOptionResponse
	(*CreateStaffShiftResponse)(nil),     // 20: memberPrivate.CreateStaffShiftResponse
	(*ListStaffShiftResponse)(nil),       // 21: memberPrivate.ListStaffShiftResponse
	(*GetStaffShiftTimeResponse)(nil),    // 22: memberPrivate.GetStaffShiftTimeResponse
}
var file_proto_member_private_member_private_proto_depIdxs = []int32{
	2,  // 0: memberPrivate.MemberPrivateServer.ListPromotion:input_type -> memberPrivate.ListPromotionRequest
	3,  // 1: memberPrivate.MemberPrivateServer.CreatePromotion:input_type -> memberPrivate.CreatePromotionRequest
	4,  // 2: memberPrivate.MemberPrivateServer.UpdatePromotion:input_type -> memberPrivate.UpdatePromotionRequest
	5,  // 3: memberPrivate.MemberPrivateServer.ShowPromotion:input_type -> memberPrivate.ShowPromotionRequest
	0,  // 4: memberPrivate.MemberPrivateServer.UpdatePromotionStatus:input_type -> memberPrivate.UpdateStatusRequest
	6,  // 5: memberPrivate.MemberPrivateServer.ListPromotionOption:input_type -> memberPrivate.ListPromotionOptionRequest
	7,  // 6: memberPrivate.MemberPrivateServer.CreatePromotionOption:input_type -> memberPrivate.CreatePromotionOptionRequest
	8,  // 7: memberPrivate.MemberPrivateServer.ShowPromotionOption:input_type -> memberPrivate.ShowPromotionOptionRequest
	9,  // 8: memberPrivate.MemberPrivateServer.UpdatePromotionOption:input_type -> memberPrivate.UpdatePromotionOptionRequest
	0,  // 9: memberPrivate.MemberPrivateServer.UpdatePromotionOptionStatus:input_type -> memberPrivate.UpdateStatusRequest
	10, // 10: memberPrivate.MemberPrivateServer.CreateStaffShift:input_type -> memberPrivate.CreateStaffShiftRequest
	11, // 11: memberPrivate.MemberPrivateServer.ListStaffShift:input_type -> memberPrivate.ListStaffShiftRequest
	12, // 12: memberPrivate.MemberPrivateServer.GetStaffShiftTime:input_type -> memberPrivate.GetStaffShiftTimeRequest
	13, // 13: memberPrivate.MemberPrivateServer.ListPromotion:output_type -> memberPrivate.ListPromotionResponse
	14, // 14: memberPrivate.MemberPrivateServer.CreatePromotion:output_type -> memberPrivate.CreatePromotionResponse
	15, // 15: memberPrivate.MemberPrivateServer.UpdatePromotion:output_type -> memberPrivate.PromotionResponse
	16, // 16: memberPrivate.MemberPrivateServer.ShowPromotion:output_type -> memberPrivate.ShowPromotionResponse
	1,  // 17: memberPrivate.MemberPrivateServer.UpdatePromotionStatus:output_type -> memberPrivate.UpdateStatusResponse
	17, // 18: memberPrivate.MemberPrivateServer.ListPromotionOption:output_type -> memberPrivate.ListPromotionOptionResponse
	18, // 19: memberPrivate.MemberPrivateServer.CreatePromotionOption:output_type -> memberPrivate.OptionResponse
	19, // 20: memberPrivate.MemberPrivateServer.ShowPromotionOption:output_type -> memberPrivate.ShowPromotionOptionResponse
	18, // 21: memberPrivate.MemberPrivateServer.UpdatePromotionOption:output_type -> memberPrivate.OptionResponse
	1,  // 22: memberPrivate.MemberPrivateServer.UpdatePromotionOptionStatus:output_type -> memberPrivate.UpdateStatusResponse
	20, // 23: memberPrivate.MemberPrivateServer.CreateStaffShift:output_type -> memberPrivate.CreateStaffShiftResponse
	21, // 24: memberPrivate.MemberPrivateServer.ListStaffShift:output_type -> memberPrivate.ListStaffShiftResponse
	22, // 25: memberPrivate.MemberPrivateServer.GetStaffShiftTime:output_type -> memberPrivate.GetStaffShiftTimeResponse
	13, // [13:26] is the sub-list for method output_type
	0,  // [0:13] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_proto_member_private_member_private_proto_init() }
func file_proto_member_private_member_private_proto_init() {
	if File_proto_member_private_member_private_proto != nil {
		return
	}
	file_proto_member_private_promotion_proto_init()
	file_proto_member_private_option_proto_init()
	file_proto_member_private_staff_shift_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_member_private_member_private_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_member_private_member_private_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_member_private_member_private_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_member_private_member_private_proto_goTypes,
		DependencyIndexes: file_proto_member_private_member_private_proto_depIdxs,
		MessageInfos:      file_proto_member_private_member_private_proto_msgTypes,
	}.Build()
	File_proto_member_private_member_private_proto = out.File
	file_proto_member_private_member_private_proto_rawDesc = nil
	file_proto_member_private_member_private_proto_goTypes = nil
	file_proto_member_private_member_private_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MemberPrivateServerClient is the client API for MemberPrivateServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MemberPrivateServerClient interface {
	ListPromotion(ctx context.Context, in *ListPromotionRequest, opts ...grpc.CallOption) (*ListPromotionResponse, error)
	CreatePromotion(ctx context.Context, in *CreatePromotionRequest, opts ...grpc.CallOption) (*CreatePromotionResponse, error)
	UpdatePromotion(ctx context.Context, in *UpdatePromotionRequest, opts ...grpc.CallOption) (*PromotionResponse, error)
	ShowPromotion(ctx context.Context, in *ShowPromotionRequest, opts ...grpc.CallOption) (*ShowPromotionResponse, error)
	UpdatePromotionStatus(ctx context.Context, in *UpdateStatusRequest, opts ...grpc.CallOption) (*UpdateStatusResponse, error)
	ListPromotionOption(ctx context.Context, in *ListPromotionOptionRequest, opts ...grpc.CallOption) (*ListPromotionOptionResponse, error)
	CreatePromotionOption(ctx context.Context, in *CreatePromotionOptionRequest, opts ...grpc.CallOption) (*OptionResponse, error)
	ShowPromotionOption(ctx context.Context, in *ShowPromotionOptionRequest, opts ...grpc.CallOption) (*ShowPromotionOptionResponse, error)
	UpdatePromotionOption(ctx context.Context, in *UpdatePromotionOptionRequest, opts ...grpc.CallOption) (*OptionResponse, error)
	UpdatePromotionOptionStatus(ctx context.Context, in *UpdateStatusRequest, opts ...grpc.CallOption) (*UpdateStatusResponse, error)
	// CreateStaffShift 交班
	CreateStaffShift(ctx context.Context, in *CreateStaffShiftRequest, opts ...grpc.CallOption) (*CreateStaffShiftResponse, error)
	// ListStaffShift 交班列表
	ListStaffShift(ctx context.Context, in *ListStaffShiftRequest, opts ...grpc.CallOption) (*ListStaffShiftResponse, error)
	// GetStaffShiftTime 获取当前班次时间
	GetStaffShiftTime(ctx context.Context, in *GetStaffShiftTimeRequest, opts ...grpc.CallOption) (*GetStaffShiftTimeResponse, error)
}

type memberPrivateServerClient struct {
	cc grpc.ClientConnInterface
}

func NewMemberPrivateServerClient(cc grpc.ClientConnInterface) MemberPrivateServerClient {
	return &memberPrivateServerClient{cc}
}

func (c *memberPrivateServerClient) ListPromotion(ctx context.Context, in *ListPromotionRequest, opts ...grpc.CallOption) (*ListPromotionResponse, error) {
	out := new(ListPromotionResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/ListPromotion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) CreatePromotion(ctx context.Context, in *CreatePromotionRequest, opts ...grpc.CallOption) (*CreatePromotionResponse, error) {
	out := new(CreatePromotionResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/CreatePromotion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) UpdatePromotion(ctx context.Context, in *UpdatePromotionRequest, opts ...grpc.CallOption) (*PromotionResponse, error) {
	out := new(PromotionResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/UpdatePromotion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) ShowPromotion(ctx context.Context, in *ShowPromotionRequest, opts ...grpc.CallOption) (*ShowPromotionResponse, error) {
	out := new(ShowPromotionResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/ShowPromotion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) UpdatePromotionStatus(ctx context.Context, in *UpdateStatusRequest, opts ...grpc.CallOption) (*UpdateStatusResponse, error) {
	out := new(UpdateStatusResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/UpdatePromotionStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) ListPromotionOption(ctx context.Context, in *ListPromotionOptionRequest, opts ...grpc.CallOption) (*ListPromotionOptionResponse, error) {
	out := new(ListPromotionOptionResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/ListPromotionOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) CreatePromotionOption(ctx context.Context, in *CreatePromotionOptionRequest, opts ...grpc.CallOption) (*OptionResponse, error) {
	out := new(OptionResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/CreatePromotionOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) ShowPromotionOption(ctx context.Context, in *ShowPromotionOptionRequest, opts ...grpc.CallOption) (*ShowPromotionOptionResponse, error) {
	out := new(ShowPromotionOptionResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/ShowPromotionOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) UpdatePromotionOption(ctx context.Context, in *UpdatePromotionOptionRequest, opts ...grpc.CallOption) (*OptionResponse, error) {
	out := new(OptionResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/UpdatePromotionOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) UpdatePromotionOptionStatus(ctx context.Context, in *UpdateStatusRequest, opts ...grpc.CallOption) (*UpdateStatusResponse, error) {
	out := new(UpdateStatusResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/UpdatePromotionOptionStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) CreateStaffShift(ctx context.Context, in *CreateStaffShiftRequest, opts ...grpc.CallOption) (*CreateStaffShiftResponse, error) {
	out := new(CreateStaffShiftResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/CreateStaffShift", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) ListStaffShift(ctx context.Context, in *ListStaffShiftRequest, opts ...grpc.CallOption) (*ListStaffShiftResponse, error) {
	out := new(ListStaffShiftResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/ListStaffShift", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberPrivateServerClient) GetStaffShiftTime(ctx context.Context, in *GetStaffShiftTimeRequest, opts ...grpc.CallOption) (*GetStaffShiftTimeResponse, error) {
	out := new(GetStaffShiftTimeResponse)
	err := c.cc.Invoke(ctx, "/memberPrivate.MemberPrivateServer/GetStaffShiftTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MemberPrivateServerServer is the server API for MemberPrivateServer service.
type MemberPrivateServerServer interface {
	ListPromotion(context.Context, *ListPromotionRequest) (*ListPromotionResponse, error)
	CreatePromotion(context.Context, *CreatePromotionRequest) (*CreatePromotionResponse, error)
	UpdatePromotion(context.Context, *UpdatePromotionRequest) (*PromotionResponse, error)
	ShowPromotion(context.Context, *ShowPromotionRequest) (*ShowPromotionResponse, error)
	UpdatePromotionStatus(context.Context, *UpdateStatusRequest) (*UpdateStatusResponse, error)
	ListPromotionOption(context.Context, *ListPromotionOptionRequest) (*ListPromotionOptionResponse, error)
	CreatePromotionOption(context.Context, *CreatePromotionOptionRequest) (*OptionResponse, error)
	ShowPromotionOption(context.Context, *ShowPromotionOptionRequest) (*ShowPromotionOptionResponse, error)
	UpdatePromotionOption(context.Context, *UpdatePromotionOptionRequest) (*OptionResponse, error)
	UpdatePromotionOptionStatus(context.Context, *UpdateStatusRequest) (*UpdateStatusResponse, error)
	// CreateStaffShift 交班
	CreateStaffShift(context.Context, *CreateStaffShiftRequest) (*CreateStaffShiftResponse, error)
	// ListStaffShift 交班列表
	ListStaffShift(context.Context, *ListStaffShiftRequest) (*ListStaffShiftResponse, error)
	// GetStaffShiftTime 获取当前班次时间
	GetStaffShiftTime(context.Context, *GetStaffShiftTimeRequest) (*GetStaffShiftTimeResponse, error)
}

// UnimplementedMemberPrivateServerServer can be embedded to have forward compatible implementations.
type UnimplementedMemberPrivateServerServer struct {
}

func (*UnimplementedMemberPrivateServerServer) ListPromotion(context.Context, *ListPromotionRequest) (*ListPromotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPromotion not implemented")
}
func (*UnimplementedMemberPrivateServerServer) CreatePromotion(context.Context, *CreatePromotionRequest) (*CreatePromotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePromotion not implemented")
}
func (*UnimplementedMemberPrivateServerServer) UpdatePromotion(context.Context, *UpdatePromotionRequest) (*PromotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePromotion not implemented")
}
func (*UnimplementedMemberPrivateServerServer) ShowPromotion(context.Context, *ShowPromotionRequest) (*ShowPromotionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowPromotion not implemented")
}
func (*UnimplementedMemberPrivateServerServer) UpdatePromotionStatus(context.Context, *UpdateStatusRequest) (*UpdateStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePromotionStatus not implemented")
}
func (*UnimplementedMemberPrivateServerServer) ListPromotionOption(context.Context, *ListPromotionOptionRequest) (*ListPromotionOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPromotionOption not implemented")
}
func (*UnimplementedMemberPrivateServerServer) CreatePromotionOption(context.Context, *CreatePromotionOptionRequest) (*OptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePromotionOption not implemented")
}
func (*UnimplementedMemberPrivateServerServer) ShowPromotionOption(context.Context, *ShowPromotionOptionRequest) (*ShowPromotionOptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowPromotionOption not implemented")
}
func (*UnimplementedMemberPrivateServerServer) UpdatePromotionOption(context.Context, *UpdatePromotionOptionRequest) (*OptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePromotionOption not implemented")
}
func (*UnimplementedMemberPrivateServerServer) UpdatePromotionOptionStatus(context.Context, *UpdateStatusRequest) (*UpdateStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePromotionOptionStatus not implemented")
}
func (*UnimplementedMemberPrivateServerServer) CreateStaffShift(context.Context, *CreateStaffShiftRequest) (*CreateStaffShiftResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStaffShift not implemented")
}
func (*UnimplementedMemberPrivateServerServer) ListStaffShift(context.Context, *ListStaffShiftRequest) (*ListStaffShiftResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStaffShift not implemented")
}
func (*UnimplementedMemberPrivateServerServer) GetStaffShiftTime(context.Context, *GetStaffShiftTimeRequest) (*GetStaffShiftTimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStaffShiftTime not implemented")
}

func RegisterMemberPrivateServerServer(s *grpc.Server, srv MemberPrivateServerServer) {
	s.RegisterService(&_MemberPrivateServer_serviceDesc, srv)
}

func _MemberPrivateServer_ListPromotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPromotionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).ListPromotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/ListPromotion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).ListPromotion(ctx, req.(*ListPromotionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_CreatePromotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePromotionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).CreatePromotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/CreatePromotion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).CreatePromotion(ctx, req.(*CreatePromotionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_UpdatePromotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePromotionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).UpdatePromotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/UpdatePromotion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).UpdatePromotion(ctx, req.(*UpdatePromotionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_ShowPromotion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowPromotionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).ShowPromotion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/ShowPromotion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).ShowPromotion(ctx, req.(*ShowPromotionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_UpdatePromotionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).UpdatePromotionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/UpdatePromotionStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).UpdatePromotionStatus(ctx, req.(*UpdateStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_ListPromotionOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPromotionOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).ListPromotionOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/ListPromotionOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).ListPromotionOption(ctx, req.(*ListPromotionOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_CreatePromotionOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePromotionOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).CreatePromotionOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/CreatePromotionOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).CreatePromotionOption(ctx, req.(*CreatePromotionOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_ShowPromotionOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowPromotionOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).ShowPromotionOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/ShowPromotionOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).ShowPromotionOption(ctx, req.(*ShowPromotionOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_UpdatePromotionOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePromotionOptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).UpdatePromotionOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/UpdatePromotionOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).UpdatePromotionOption(ctx, req.(*UpdatePromotionOptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_UpdatePromotionOptionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).UpdatePromotionOptionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/UpdatePromotionOptionStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).UpdatePromotionOptionStatus(ctx, req.(*UpdateStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_CreateStaffShift_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStaffShiftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).CreateStaffShift(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/CreateStaffShift",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).CreateStaffShift(ctx, req.(*CreateStaffShiftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_ListStaffShift_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStaffShiftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).ListStaffShift(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/ListStaffShift",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).ListStaffShift(ctx, req.(*ListStaffShiftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberPrivateServer_GetStaffShiftTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStaffShiftTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberPrivateServerServer).GetStaffShiftTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/memberPrivate.MemberPrivateServer/GetStaffShiftTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberPrivateServerServer).GetStaffShiftTime(ctx, req.(*GetStaffShiftTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MemberPrivateServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "memberPrivate.MemberPrivateServer",
	HandlerType: (*MemberPrivateServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListPromotion",
			Handler:    _MemberPrivateServer_ListPromotion_Handler,
		},
		{
			MethodName: "CreatePromotion",
			Handler:    _MemberPrivateServer_CreatePromotion_Handler,
		},
		{
			MethodName: "UpdatePromotion",
			Handler:    _MemberPrivateServer_UpdatePromotion_Handler,
		},
		{
			MethodName: "ShowPromotion",
			Handler:    _MemberPrivateServer_ShowPromotion_Handler,
		},
		{
			MethodName: "UpdatePromotionStatus",
			Handler:    _MemberPrivateServer_UpdatePromotionStatus_Handler,
		},
		{
			MethodName: "ListPromotionOption",
			Handler:    _MemberPrivateServer_ListPromotionOption_Handler,
		},
		{
			MethodName: "CreatePromotionOption",
			Handler:    _MemberPrivateServer_CreatePromotionOption_Handler,
		},
		{
			MethodName: "ShowPromotionOption",
			Handler:    _MemberPrivateServer_ShowPromotionOption_Handler,
		},
		{
			MethodName: "UpdatePromotionOption",
			Handler:    _MemberPrivateServer_UpdatePromotionOption_Handler,
		},
		{
			MethodName: "UpdatePromotionOptionStatus",
			Handler:    _MemberPrivateServer_UpdatePromotionOptionStatus_Handler,
		},
		{
			MethodName: "CreateStaffShift",
			Handler:    _MemberPrivateServer_CreateStaffShift_Handler,
		},
		{
			MethodName: "ListStaffShift",
			Handler:    _MemberPrivateServer_ListStaffShift_Handler,
		},
		{
			MethodName: "GetStaffShiftTime",
			Handler:    _MemberPrivateServer_GetStaffShiftTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/member-private/member_private.proto",
}
