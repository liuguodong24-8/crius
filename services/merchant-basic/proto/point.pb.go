// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/merchant-basic/point.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateConsumeCategoryRequest 创建积分类型
type CreateConsumeCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category      string   `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Code          string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Status        string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	OperatorTypes []string `protobuf:"bytes,4,rep,name=operator_types,json=operatorTypes,proto3" json:"operator_types,omitempty"`
	ActiveTypes   []string `protobuf:"bytes,5,rep,name=active_types,json=activeTypes,proto3" json:"active_types,omitempty"`
	IsRoomFee     bool     `protobuf:"varint,6,opt,name=is_room_fee,json=isRoomFee,proto3" json:"is_room_fee,omitempty"`
}

func (x *CreateConsumeCategoryRequest) Reset() {
	*x = CreateConsumeCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConsumeCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConsumeCategoryRequest) ProtoMessage() {}

func (x *CreateConsumeCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConsumeCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateConsumeCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{0}
}

func (x *CreateConsumeCategoryRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CreateConsumeCategoryRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateConsumeCategoryRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateConsumeCategoryRequest) GetOperatorTypes() []string {
	if x != nil {
		return x.OperatorTypes
	}
	return nil
}

func (x *CreateConsumeCategoryRequest) GetActiveTypes() []string {
	if x != nil {
		return x.ActiveTypes
	}
	return nil
}

func (x *CreateConsumeCategoryRequest) GetIsRoomFee() bool {
	if x != nil {
		return x.IsRoomFee
	}
	return false
}

// ListConsumeCategoryRequest 积分类型列表
type ListConsumeCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Limit    int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int32  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy  string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	WithPage bool   `protobuf:"varint,6,opt,name=with_page,json=withPage,proto3" json:"with_page,omitempty"`
}

func (x *ListConsumeCategoryRequest) Reset() {
	*x = ListConsumeCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConsumeCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConsumeCategoryRequest) ProtoMessage() {}

func (x *ListConsumeCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConsumeCategoryRequest.ProtoReflect.Descriptor instead.
func (*ListConsumeCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{1}
}

func (x *ListConsumeCategoryRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListConsumeCategoryRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListConsumeCategoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListConsumeCategoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListConsumeCategoryRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListConsumeCategoryRequest) GetWithPage() bool {
	if x != nil {
		return x.WithPage
	}
	return false
}

// ConsumeCategory 积分类型
type ConsumeCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Category      string   `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Code          string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Status        string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     int64    `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	OperatorTypes []string `protobuf:"bytes,6,rep,name=operator_types,json=operatorTypes,proto3" json:"operator_types,omitempty"`
	ActiveTypes   []string `protobuf:"bytes,7,rep,name=active_types,json=activeTypes,proto3" json:"active_types,omitempty"`
	IsRoomFee     bool     `protobuf:"varint,8,opt,name=is_room_fee,json=isRoomFee,proto3" json:"is_room_fee,omitempty"`
}

func (x *ConsumeCategory) Reset() {
	*x = ConsumeCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeCategory) ProtoMessage() {}

func (x *ConsumeCategory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeCategory.ProtoReflect.Descriptor instead.
func (*ConsumeCategory) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{2}
}

func (x *ConsumeCategory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConsumeCategory) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ConsumeCategory) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ConsumeCategory) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ConsumeCategory) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ConsumeCategory) GetOperatorTypes() []string {
	if x != nil {
		return x.OperatorTypes
	}
	return nil
}

func (x *ConsumeCategory) GetActiveTypes() []string {
	if x != nil {
		return x.ActiveTypes
	}
	return nil
}

func (x *ConsumeCategory) GetIsRoomFee() bool {
	if x != nil {
		return x.IsRoomFee
	}
	return false
}

type GetConsumeCategoryTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32                                 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string                                `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *GetConsumeCategoryTypesResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetConsumeCategoryTypesResponse) Reset() {
	*x = GetConsumeCategoryTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConsumeCategoryTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConsumeCategoryTypesResponse) ProtoMessage() {}

func (x *GetConsumeCategoryTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConsumeCategoryTypesResponse.ProtoReflect.Descriptor instead.
func (*GetConsumeCategoryTypesResponse) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{3}
}

func (x *GetConsumeCategoryTypesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetConsumeCategoryTypesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetConsumeCategoryTypesResponse) GetData() *GetConsumeCategoryTypesResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// ListConsumeCategoryResponse 积分类型列表
type ListConsumeCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32                             `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string                            `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *ListConsumeCategoryResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListConsumeCategoryResponse) Reset() {
	*x = ListConsumeCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConsumeCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConsumeCategoryResponse) ProtoMessage() {}

func (x *ListConsumeCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConsumeCategoryResponse.ProtoReflect.Descriptor instead.
func (*ListConsumeCategoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{4}
}

func (x *ListConsumeCategoryResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ListConsumeCategoryResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ListConsumeCategoryResponse) GetData() *ListConsumeCategoryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// UpdateConsumeCategoryRequest 修改积分类型
type UpdateConsumeCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Category      string   `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Code          string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Status        string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	OperatorTypes []string `protobuf:"bytes,5,rep,name=operator_types,json=operatorTypes,proto3" json:"operator_types,omitempty"`
	ActiveTypes   []string `protobuf:"bytes,6,rep,name=active_types,json=activeTypes,proto3" json:"active_types,omitempty"`
	IsRoomFee     bool     `protobuf:"varint,7,opt,name=is_room_fee,json=isRoomFee,proto3" json:"is_room_fee,omitempty"`
}

func (x *UpdateConsumeCategoryRequest) Reset() {
	*x = UpdateConsumeCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConsumeCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConsumeCategoryRequest) ProtoMessage() {}

func (x *UpdateConsumeCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConsumeCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateConsumeCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateConsumeCategoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateConsumeCategoryRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UpdateConsumeCategoryRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpdateConsumeCategoryRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateConsumeCategoryRequest) GetOperatorTypes() []string {
	if x != nil {
		return x.OperatorTypes
	}
	return nil
}

func (x *UpdateConsumeCategoryRequest) GetActiveTypes() []string {
	if x != nil {
		return x.ActiveTypes
	}
	return nil
}

func (x *UpdateConsumeCategoryRequest) GetIsRoomFee() bool {
	if x != nil {
		return x.IsRoomFee
	}
	return false
}

// ShowConsumeCategoryRequest 查看积分类型
type ShowConsumeCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ShowConsumeCategoryRequest) Reset() {
	*x = ShowConsumeCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowConsumeCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowConsumeCategoryRequest) ProtoMessage() {}

func (x *ShowConsumeCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowConsumeCategoryRequest.ProtoReflect.Descriptor instead.
func (*ShowConsumeCategoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{6}
}

func (x *ShowConsumeCategoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ShowConsumeCategoryResponse 查看积分类型
type ShowConsumeCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32            `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string           `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *ConsumeCategory `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShowConsumeCategoryResponse) Reset() {
	*x = ShowConsumeCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowConsumeCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowConsumeCategoryResponse) ProtoMessage() {}

func (x *ShowConsumeCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowConsumeCategoryResponse.ProtoReflect.Descriptor instead.
func (*ShowConsumeCategoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{7}
}

func (x *ShowConsumeCategoryResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ShowConsumeCategoryResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ShowConsumeCategoryResponse) GetData() *ConsumeCategory {
	if x != nil {
		return x.Data
	}
	return nil
}

// SetPointRuleDescribeRequest 设置积分规则说明
type SetPointRuleDescribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []string `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *SetPointRuleDescribeRequest) Reset() {
	*x = SetPointRuleDescribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPointRuleDescribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPointRuleDescribeRequest) ProtoMessage() {}

func (x *SetPointRuleDescribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPointRuleDescribeRequest.ProtoReflect.Descriptor instead.
func (*SetPointRuleDescribeRequest) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{8}
}

func (x *SetPointRuleDescribeRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

// GetPointRuleDescribeResponse 获取积分规则说明
type GetPointRuleDescribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32                              `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string                             `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *GetPointRuleDescribeResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPointRuleDescribeResponse) Reset() {
	*x = GetPointRuleDescribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointRuleDescribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointRuleDescribeResponse) ProtoMessage() {}

func (x *GetPointRuleDescribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointRuleDescribeResponse.ProtoReflect.Descriptor instead.
func (*GetPointRuleDescribeResponse) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{9}
}

func (x *GetPointRuleDescribeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetPointRuleDescribeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetPointRuleDescribeResponse) GetData() *GetPointRuleDescribeResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// PointRule 积分规则
type PointRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RuleName    string             `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	GainRules   []*PointRuleDetail `protobuf:"bytes,3,rep,name=gain_rules,json=gainRules,proto3" json:"gain_rules,omitempty"`
	UseRules    []*PointRuleDetail `protobuf:"bytes,4,rep,name=use_rules,json=useRules,proto3" json:"use_rules,omitempty"`
	ValidityDay int32              `protobuf:"varint,5,opt,name=validity_day,json=validityDay,proto3" json:"validity_day,omitempty"`
	BranchIds   []string           `protobuf:"bytes,6,rep,name=branch_ids,json=branchIds,proto3" json:"branch_ids,omitempty"`
	Status      string             `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt   int64              `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *PointRule) Reset() {
	*x = PointRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointRule) ProtoMessage() {}

func (x *PointRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointRule.ProtoReflect.Descriptor instead.
func (*PointRule) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{10}
}

func (x *PointRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PointRule) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *PointRule) GetGainRules() []*PointRuleDetail {
	if x != nil {
		return x.GainRules
	}
	return nil
}

func (x *PointRule) GetUseRules() []*PointRuleDetail {
	if x != nil {
		return x.UseRules
	}
	return nil
}

func (x *PointRule) GetValidityDay() int32 {
	if x != nil {
		return x.ValidityDay
	}
	return 0
}

func (x *PointRule) GetBranchIds() []string {
	if x != nil {
		return x.BranchIds
	}
	return nil
}

func (x *PointRule) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PointRule) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// PointRuleDetail 积分规则详情
type PointRuleDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId string `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Point      int64  `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`
	Fee        int64  `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *PointRuleDetail) Reset() {
	*x = PointRuleDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointRuleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointRuleDetail) ProtoMessage() {}

func (x *PointRuleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointRuleDetail.ProtoReflect.Descriptor instead.
func (*PointRuleDetail) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{11}
}

func (x *PointRuleDetail) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *PointRuleDetail) GetPoint() int64 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *PointRuleDetail) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

// CreatePointRule 保存积分设置
type CreatePointRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleName    string             `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	GainRules   []*PointRuleDetail `protobuf:"bytes,2,rep,name=gain_rules,json=gainRules,proto3" json:"gain_rules,omitempty"`
	UseRules    []*PointRuleDetail `protobuf:"bytes,3,rep,name=use_rules,json=useRules,proto3" json:"use_rules,omitempty"`
	ValidityDay int32              `protobuf:"varint,4,opt,name=validity_day,json=validityDay,proto3" json:"validity_day,omitempty"`
	BranchIds   []string           `protobuf:"bytes,5,rep,name=branch_ids,json=branchIds,proto3" json:"branch_ids,omitempty"`
	Status      string             `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreatePointRuleRequest) Reset() {
	*x = CreatePointRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePointRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePointRuleRequest) ProtoMessage() {}

func (x *CreatePointRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePointRuleRequest.ProtoReflect.Descriptor instead.
func (*CreatePointRuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{12}
}

func (x *CreatePointRuleRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *CreatePointRuleRequest) GetGainRules() []*PointRuleDetail {
	if x != nil {
		return x.GainRules
	}
	return nil
}

func (x *CreatePointRuleRequest) GetUseRules() []*PointRuleDetail {
	if x != nil {
		return x.UseRules
	}
	return nil
}

func (x *CreatePointRuleRequest) GetValidityDay() int32 {
	if x != nil {
		return x.ValidityDay
	}
	return 0
}

func (x *CreatePointRuleRequest) GetBranchIds() []string {
	if x != nil {
		return x.BranchIds
	}
	return nil
}

func (x *CreatePointRuleRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// UpdatePointRuleRequest 修改积分规则
type UpdatePointRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RuleName    string             `protobuf:"bytes,2,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	GainRules   []*PointRuleDetail `protobuf:"bytes,3,rep,name=gain_rules,json=gainRules,proto3" json:"gain_rules,omitempty"`
	UseRules    []*PointRuleDetail `protobuf:"bytes,4,rep,name=use_rules,json=useRules,proto3" json:"use_rules,omitempty"`
	ValidityDay int32              `protobuf:"varint,5,opt,name=validity_day,json=validityDay,proto3" json:"validity_day,omitempty"`
	BranchIds   []string           `protobuf:"bytes,6,rep,name=branch_ids,json=branchIds,proto3" json:"branch_ids,omitempty"`
	Status      string             `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdatePointRuleRequest) Reset() {
	*x = UpdatePointRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePointRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePointRuleRequest) ProtoMessage() {}

func (x *UpdatePointRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePointRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdatePointRuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{13}
}

func (x *UpdatePointRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePointRuleRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *UpdatePointRuleRequest) GetGainRules() []*PointRuleDetail {
	if x != nil {
		return x.GainRules
	}
	return nil
}

func (x *UpdatePointRuleRequest) GetUseRules() []*PointRuleDetail {
	if x != nil {
		return x.UseRules
	}
	return nil
}

func (x *UpdatePointRuleRequest) GetValidityDay() int32 {
	if x != nil {
		return x.ValidityDay
	}
	return 0
}

func (x *UpdatePointRuleRequest) GetBranchIds() []string {
	if x != nil {
		return x.BranchIds
	}
	return nil
}

func (x *UpdatePointRuleRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// ListPointRuleRequest 查看积分规则列表
type ListPointRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleName string `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Limit    int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int32  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy  string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	WithPage bool   `protobuf:"varint,6,opt,name=with_page,json=withPage,proto3" json:"with_page,omitempty"`
}

func (x *ListPointRuleRequest) Reset() {
	*x = ListPointRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPointRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPointRuleRequest) ProtoMessage() {}

func (x *ListPointRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPointRuleRequest.ProtoReflect.Descriptor instead.
func (*ListPointRuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{14}
}

func (x *ListPointRuleRequest) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *ListPointRuleRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListPointRuleRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPointRuleRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPointRuleRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListPointRuleRequest) GetWithPage() bool {
	if x != nil {
		return x.WithPage
	}
	return false
}

// ListPointRuleRequest 查看积分规则列表
type ListPointRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32                       `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string                      `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *ListPointRuleResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListPointRuleResponse) Reset() {
	*x = ListPointRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPointRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPointRuleResponse) ProtoMessage() {}

func (x *ListPointRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPointRuleResponse.ProtoReflect.Descriptor instead.
func (*ListPointRuleResponse) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{15}
}

func (x *ListPointRuleResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ListPointRuleResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ListPointRuleResponse) GetData() *ListPointRuleResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// ShowPointRuleRequest 查看积分规则详情
type ShowPointRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BranchId string `protobuf:"bytes,2,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *ShowPointRuleRequest) Reset() {
	*x = ShowPointRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowPointRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowPointRuleRequest) ProtoMessage() {}

func (x *ShowPointRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowPointRuleRequest.ProtoReflect.Descriptor instead.
func (*ShowPointRuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{16}
}

func (x *ShowPointRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShowPointRuleRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

// ShowPointRuleResponse 查看积分规则详情
type ShowPointRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32      `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string     `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *PointRule `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShowPointRuleResponse) Reset() {
	*x = ShowPointRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowPointRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowPointRuleResponse) ProtoMessage() {}

func (x *ShowPointRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowPointRuleResponse.ProtoReflect.Descriptor instead.
func (*ShowPointRuleResponse) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{17}
}

func (x *ShowPointRuleResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ShowPointRuleResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ShowPointRuleResponse) GetData() *PointRule {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetPointRuleAllBranchResponse 获取所有已设置积分规则的门店
type GetPointRuleAllBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32                               `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string                              `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *GetPointRuleAllBranchResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPointRuleAllBranchResponse) Reset() {
	*x = GetPointRuleAllBranchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointRuleAllBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointRuleAllBranchResponse) ProtoMessage() {}

func (x *GetPointRuleAllBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointRuleAllBranchResponse.ProtoReflect.Descriptor instead.
func (*GetPointRuleAllBranchResponse) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{18}
}

func (x *GetPointRuleAllBranchResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetPointRuleAllBranchResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetPointRuleAllBranchResponse) GetData() *GetPointRuleAllBranchResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetBranchPointRuleRequest 获取门店积分规则
type GetBranchPointRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId     string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	CategoryCode string `protobuf:"bytes,2,opt,name=category_code,json=categoryCode,proto3" json:"category_code,omitempty"`
}

func (x *GetBranchPointRuleRequest) Reset() {
	*x = GetBranchPointRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchPointRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchPointRuleRequest) ProtoMessage() {}

func (x *GetBranchPointRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchPointRuleRequest.ProtoReflect.Descriptor instead.
func (*GetBranchPointRuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{19}
}

func (x *GetBranchPointRuleRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetBranchPointRuleRequest) GetCategoryCode() string {
	if x != nil {
		return x.CategoryCode
	}
	return ""
}

// GetBranchPointRuleResponse 获取门店积分规则
type GetBranchPointRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32                            `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string                           `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *GetBranchPointRuleResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBranchPointRuleResponse) Reset() {
	*x = GetBranchPointRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchPointRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchPointRuleResponse) ProtoMessage() {}

func (x *GetBranchPointRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchPointRuleResponse.ProtoReflect.Descriptor instead.
func (*GetBranchPointRuleResponse) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{20}
}

func (x *GetBranchPointRuleResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetBranchPointRuleResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetBranchPointRuleResponse) GetData() *GetBranchPointRuleResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetBranchPointRulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId string `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
}

func (x *GetBranchPointRulesRequest) Reset() {
	*x = GetBranchPointRulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchPointRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchPointRulesRequest) ProtoMessage() {}

func (x *GetBranchPointRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchPointRulesRequest.ProtoReflect.Descriptor instead.
func (*GetBranchPointRulesRequest) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{21}
}

func (x *GetBranchPointRulesRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type PointRuleWithConsumeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point         int64    `protobuf:"varint,1,opt,name=point,proto3" json:"point,omitempty"`
	Fee           int64    `protobuf:"varint,2,opt,name=fee,proto3" json:"fee,omitempty"`
	OperateType   []string `protobuf:"bytes,3,rep,name=operate_type,json=operateType,proto3" json:"operate_type,omitempty"`
	ActiveType    []string `protobuf:"bytes,4,rep,name=active_type,json=activeType,proto3" json:"active_type,omitempty"`
	ConsumeType   string   `protobuf:"bytes,5,opt,name=consume_type,json=consumeType,proto3" json:"consume_type,omitempty"`
	ConsumeTypeId string   `protobuf:"bytes,6,opt,name=consume_type_id,json=consumeTypeId,proto3" json:"consume_type_id,omitempty"`
	IsRoomFee     bool     `protobuf:"varint,7,opt,name=is_room_fee,json=isRoomFee,proto3" json:"is_room_fee,omitempty"`
}

func (x *PointRuleWithConsumeType) Reset() {
	*x = PointRuleWithConsumeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointRuleWithConsumeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointRuleWithConsumeType) ProtoMessage() {}

func (x *PointRuleWithConsumeType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointRuleWithConsumeType.ProtoReflect.Descriptor instead.
func (*PointRuleWithConsumeType) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{22}
}

func (x *PointRuleWithConsumeType) GetPoint() int64 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *PointRuleWithConsumeType) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *PointRuleWithConsumeType) GetOperateType() []string {
	if x != nil {
		return x.OperateType
	}
	return nil
}

func (x *PointRuleWithConsumeType) GetActiveType() []string {
	if x != nil {
		return x.ActiveType
	}
	return nil
}

func (x *PointRuleWithConsumeType) GetConsumeType() string {
	if x != nil {
		return x.ConsumeType
	}
	return ""
}

func (x *PointRuleWithConsumeType) GetConsumeTypeId() string {
	if x != nil {
		return x.ConsumeTypeId
	}
	return ""
}

func (x *PointRuleWithConsumeType) GetIsRoomFee() bool {
	if x != nil {
		return x.IsRoomFee
	}
	return false
}

type GetBranchPointRulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32                             `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string                            `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         *GetBranchPointRulesResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBranchPointRulesResponse) Reset() {
	*x = GetBranchPointRulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchPointRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchPointRulesResponse) ProtoMessage() {}

func (x *GetBranchPointRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchPointRulesResponse.ProtoReflect.Descriptor instead.
func (*GetBranchPointRulesResponse) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{23}
}

func (x *GetBranchPointRulesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetBranchPointRulesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetBranchPointRulesResponse) GetData() *GetBranchPointRulesResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetConsumeCategoryTypesResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorTypes []string `protobuf:"bytes,1,rep,name=operator_types,json=operatorTypes,proto3" json:"operator_types,omitempty"`
	ActiveTypes   []string `protobuf:"bytes,7,rep,name=active_types,json=activeTypes,proto3" json:"active_types,omitempty"`
	IsRoomFee     bool     `protobuf:"varint,2,opt,name=is_room_fee,json=isRoomFee,proto3" json:"is_room_fee,omitempty"`
}

func (x *GetConsumeCategoryTypesResponse_Data) Reset() {
	*x = GetConsumeCategoryTypesResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConsumeCategoryTypesResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConsumeCategoryTypesResponse_Data) ProtoMessage() {}

func (x *GetConsumeCategoryTypesResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConsumeCategoryTypesResponse_Data.ProtoReflect.Descriptor instead.
func (*GetConsumeCategoryTypesResponse_Data) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetConsumeCategoryTypesResponse_Data) GetOperatorTypes() []string {
	if x != nil {
		return x.OperatorTypes
	}
	return nil
}

func (x *GetConsumeCategoryTypesResponse_Data) GetActiveTypes() []string {
	if x != nil {
		return x.ActiveTypes
	}
	return nil
}

func (x *GetConsumeCategoryTypesResponse_Data) GetIsRoomFee() bool {
	if x != nil {
		return x.IsRoomFee
	}
	return false
}

type ListConsumeCategoryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*ConsumeCategory `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListConsumeCategoryResponse_Data) Reset() {
	*x = ListConsumeCategoryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConsumeCategoryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConsumeCategoryResponse_Data) ProtoMessage() {}

func (x *ListConsumeCategoryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConsumeCategoryResponse_Data.ProtoReflect.Descriptor instead.
func (*ListConsumeCategoryResponse_Data) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ListConsumeCategoryResponse_Data) GetData() []*ConsumeCategory {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListConsumeCategoryResponse_Data) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetPointRuleDescribeResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []string `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *GetPointRuleDescribeResponse_Data) Reset() {
	*x = GetPointRuleDescribeResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointRuleDescribeResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointRuleDescribeResponse_Data) ProtoMessage() {}

func (x *GetPointRuleDescribeResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointRuleDescribeResponse_Data.ProtoReflect.Descriptor instead.
func (*GetPointRuleDescribeResponse_Data) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GetPointRuleDescribeResponse_Data) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

type ListPointRuleResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*PointRule `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPointRuleResponse_Data) Reset() {
	*x = ListPointRuleResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPointRuleResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPointRuleResponse_Data) ProtoMessage() {}

func (x *ListPointRuleResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPointRuleResponse_Data.ProtoReflect.Descriptor instead.
func (*ListPointRuleResponse_Data) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ListPointRuleResponse_Data) GetData() []*PointRule {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListPointRuleResponse_Data) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetPointRuleAllBranchResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchIds []string `protobuf:"bytes,1,rep,name=branch_ids,json=branchIds,proto3" json:"branch_ids,omitempty"`
}

func (x *GetPointRuleAllBranchResponse_Data) Reset() {
	*x = GetPointRuleAllBranchResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPointRuleAllBranchResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPointRuleAllBranchResponse_Data) ProtoMessage() {}

func (x *GetPointRuleAllBranchResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPointRuleAllBranchResponse_Data.ProtoReflect.Descriptor instead.
func (*GetPointRuleAllBranchResponse_Data) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{18, 0}
}

func (x *GetPointRuleAllBranchResponse_Data) GetBranchIds() []string {
	if x != nil {
		return x.BranchIds
	}
	return nil
}

type GetBranchPointRuleResponse_Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point       int64 `protobuf:"varint,1,opt,name=point,proto3" json:"point,omitempty"`
	Fee         int64 `protobuf:"varint,2,opt,name=fee,proto3" json:"fee,omitempty"`
	ValidityDay int32 `protobuf:"varint,3,opt,name=validity_day,json=validityDay,proto3" json:"validity_day,omitempty"`
}

func (x *GetBranchPointRuleResponse_Rule) Reset() {
	*x = GetBranchPointRuleResponse_Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchPointRuleResponse_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchPointRuleResponse_Rule) ProtoMessage() {}

func (x *GetBranchPointRuleResponse_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchPointRuleResponse_Rule.ProtoReflect.Descriptor instead.
func (*GetBranchPointRuleResponse_Rule) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{20, 0}
}

func (x *GetBranchPointRuleResponse_Rule) GetPoint() int64 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *GetBranchPointRuleResponse_Rule) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *GetBranchPointRuleResponse_Rule) GetValidityDay() int32 {
	if x != nil {
		return x.ValidityDay
	}
	return 0
}

type GetBranchPointRuleResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GainRule *GetBranchPointRuleResponse_Rule `protobuf:"bytes,1,opt,name=gain_rule,json=gainRule,proto3" json:"gain_rule,omitempty"`
	UseRule  *GetBranchPointRuleResponse_Rule `protobuf:"bytes,2,opt,name=use_rule,json=useRule,proto3" json:"use_rule,omitempty"`
}

func (x *GetBranchPointRuleResponse_Data) Reset() {
	*x = GetBranchPointRuleResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchPointRuleResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchPointRuleResponse_Data) ProtoMessage() {}

func (x *GetBranchPointRuleResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchPointRuleResponse_Data.ProtoReflect.Descriptor instead.
func (*GetBranchPointRuleResponse_Data) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{20, 1}
}

func (x *GetBranchPointRuleResponse_Data) GetGainRule() *GetBranchPointRuleResponse_Rule {
	if x != nil {
		return x.GainRule
	}
	return nil
}

func (x *GetBranchPointRuleResponse_Data) GetUseRule() *GetBranchPointRuleResponse_Rule {
	if x != nil {
		return x.UseRule
	}
	return nil
}

type GetBranchPointRulesResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GainRule []*PointRuleWithConsumeType `protobuf:"bytes,1,rep,name=gain_rule,json=gainRule,proto3" json:"gain_rule,omitempty"`
	UseRule  []*PointRuleWithConsumeType `protobuf:"bytes,2,rep,name=use_rule,json=useRule,proto3" json:"use_rule,omitempty"`
}

func (x *GetBranchPointRulesResponse_Data) Reset() {
	*x = GetBranchPointRulesResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_merchant_basic_point_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchPointRulesResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchPointRulesResponse_Data) ProtoMessage() {}

func (x *GetBranchPointRulesResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_merchant_basic_point_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchPointRulesResponse_Data.ProtoReflect.Descriptor instead.
func (*GetBranchPointRulesResponse_Data) Descriptor() ([]byte, []int) {
	return file_proto_merchant_basic_point_proto_rawDescGZIP(), []int{23, 0}
}

func (x *GetBranchPointRulesResponse_Data) GetGainRule() []*PointRuleWithConsumeType {
	if x != nil {
		return x.GainRule
	}
	return nil
}

func (x *GetBranchPointRulesResponse_Data) GetUseRule() []*PointRuleWithConsumeType {
	if x != nil {
		return x.UseRule
	}
	return nil
}

var File_proto_merchant_basic_point_proto protoreflect.FileDescriptor

var file_proto_merchant_basic_point_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x2d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x22, 0xd0, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x6f, 0x6f,
	0x6d, 0x46, 0x65, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x50, 0x61, 0x67, 0x65, 0x22, 0xf2, 0x01,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x46,
	0x65, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x70, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x6f,
	0x6f, 0x6d, 0x46, 0x65, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x50,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xe0, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x6f, 0x6f, 0x6d,
	0x46, 0x65, 0x65, 0x22, 0x2c, 0x0a, 0x1a, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x95, 0x01, 0x0a, 0x1b, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x1b, 0x53, 0x65, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x22, 0xc8, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x1e, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xad, 0x02, 0x0a, 0x09,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x09, 0x67, 0x61, 0x69, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x75, 0x73, 0x65, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x64,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5a, 0x0a, 0x0f, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3d, 0x0a, 0x0a, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x09, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x08, 0x75, 0x73, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x44, 0x61, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9b, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x0a, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x09, 0x67, 0x61, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x44, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77,
	0x69, 0x74, 0x68, 0x50, 0x61, 0x67, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x4a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x43, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xd1, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x25,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x49, 0x64, 0x73, 0x22, 0x5d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x98, 0x03, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x51, 0x0a, 0x04, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x44, 0x61, 0x79, 0x1a, 0x9e,
	0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x09, 0x67, 0x61, 0x69, 0x6e, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x67, 0x61, 0x69, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x75, 0x73, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x22,
	0x39, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x18, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x46, 0x65, 0x65, 0x22, 0xb9,
	0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x90, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x44, 0x0a, 0x09, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x67, 0x61,
	0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x75, 0x73, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x2f, 0x5a, 0x0d, 0x2e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xca, 0x02, 0x1d, 0x4f, 0x6d,
	0x79, 0x5c, 0x43, 0x72, 0x69, 0x75, 0x73, 0x5c, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_merchant_basic_point_proto_rawDescOnce sync.Once
	file_proto_merchant_basic_point_proto_rawDescData = file_proto_merchant_basic_point_proto_rawDesc
)

func file_proto_merchant_basic_point_proto_rawDescGZIP() []byte {
	file_proto_merchant_basic_point_proto_rawDescOnce.Do(func() {
		file_proto_merchant_basic_point_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_merchant_basic_point_proto_rawDescData)
	})
	return file_proto_merchant_basic_point_proto_rawDescData
}

var file_proto_merchant_basic_point_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_proto_merchant_basic_point_proto_goTypes = []interface{}{
	(*CreateConsumeCategoryRequest)(nil),         // 0: merchantBasic.CreateConsumeCategoryRequest
	(*ListConsumeCategoryRequest)(nil),           // 1: merchantBasic.ListConsumeCategoryRequest
	(*ConsumeCategory)(nil),                      // 2: merchantBasic.ConsumeCategory
	(*GetConsumeCategoryTypesResponse)(nil),      // 3: merchantBasic.GetConsumeCategoryTypesResponse
	(*ListConsumeCategoryResponse)(nil),          // 4: merchantBasic.ListConsumeCategoryResponse
	(*UpdateConsumeCategoryRequest)(nil),         // 5: merchantBasic.UpdateConsumeCategoryRequest
	(*ShowConsumeCategoryRequest)(nil),           // 6: merchantBasic.ShowConsumeCategoryRequest
	(*ShowConsumeCategoryResponse)(nil),          // 7: merchantBasic.ShowConsumeCategoryResponse
	(*SetPointRuleDescribeRequest)(nil),          // 8: merchantBasic.SetPointRuleDescribeRequest
	(*GetPointRuleDescribeResponse)(nil),         // 9: merchantBasic.GetPointRuleDescribeResponse
	(*PointRule)(nil),                            // 10: merchantBasic.PointRule
	(*PointRuleDetail)(nil),                      // 11: merchantBasic.PointRuleDetail
	(*CreatePointRuleRequest)(nil),               // 12: merchantBasic.CreatePointRuleRequest
	(*UpdatePointRuleRequest)(nil),               // 13: merchantBasic.UpdatePointRuleRequest
	(*ListPointRuleRequest)(nil),                 // 14: merchantBasic.ListPointRuleRequest
	(*ListPointRuleResponse)(nil),                // 15: merchantBasic.ListPointRuleResponse
	(*ShowPointRuleRequest)(nil),                 // 16: merchantBasic.ShowPointRuleRequest
	(*ShowPointRuleResponse)(nil),                // 17: merchantBasic.ShowPointRuleResponse
	(*GetPointRuleAllBranchResponse)(nil),        // 18: merchantBasic.GetPointRuleAllBranchResponse
	(*GetBranchPointRuleRequest)(nil),            // 19: merchantBasic.GetBranchPointRuleRequest
	(*GetBranchPointRuleResponse)(nil),           // 20: merchantBasic.GetBranchPointRuleResponse
	(*GetBranchPointRulesRequest)(nil),           // 21: merchantBasic.GetBranchPointRulesRequest
	(*PointRuleWithConsumeType)(nil),             // 22: merchantBasic.PointRuleWithConsumeType
	(*GetBranchPointRulesResponse)(nil),          // 23: merchantBasic.GetBranchPointRulesResponse
	(*GetConsumeCategoryTypesResponse_Data)(nil), // 24: merchantBasic.GetConsumeCategoryTypesResponse.Data
	(*ListConsumeCategoryResponse_Data)(nil),     // 25: merchantBasic.ListConsumeCategoryResponse.Data
	(*GetPointRuleDescribeResponse_Data)(nil),    // 26: merchantBasic.GetPointRuleDescribeResponse.Data
	(*ListPointRuleResponse_Data)(nil),           // 27: merchantBasic.ListPointRuleResponse.Data
	(*GetPointRuleAllBranchResponse_Data)(nil),   // 28: merchantBasic.GetPointRuleAllBranchResponse.Data
	(*GetBranchPointRuleResponse_Rule)(nil),      // 29: merchantBasic.GetBranchPointRuleResponse.Rule
	(*GetBranchPointRuleResponse_Data)(nil),      // 30: merchantBasic.GetBranchPointRuleResponse.Data
	(*GetBranchPointRulesResponse_Data)(nil),     // 31: merchantBasic.GetBranchPointRulesResponse.Data
}
var file_proto_merchant_basic_point_proto_depIdxs = []int32{
	24, // 0: merchantBasic.GetConsumeCategoryTypesResponse.data:type_name -> merchantBasic.GetConsumeCategoryTypesResponse.Data
	25, // 1: merchantBasic.ListConsumeCategoryResponse.data:type_name -> merchantBasic.ListConsumeCategoryResponse.Data
	2,  // 2: merchantBasic.ShowConsumeCategoryResponse.data:type_name -> merchantBasic.ConsumeCategory
	26, // 3: merchantBasic.GetPointRuleDescribeResponse.data:type_name -> merchantBasic.GetPointRuleDescribeResponse.Data
	11, // 4: merchantBasic.PointRule.gain_rules:type_name -> merchantBasic.PointRuleDetail
	11, // 5: merchantBasic.PointRule.use_rules:type_name -> merchantBasic.PointRuleDetail
	11, // 6: merchantBasic.CreatePointRuleRequest.gain_rules:type_name -> merchantBasic.PointRuleDetail
	11, // 7: merchantBasic.CreatePointRuleRequest.use_rules:type_name -> merchantBasic.PointRuleDetail
	11, // 8: merchantBasic.UpdatePointRuleRequest.gain_rules:type_name -> merchantBasic.PointRuleDetail
	11, // 9: merchantBasic.UpdatePointRuleRequest.use_rules:type_name -> merchantBasic.PointRuleDetail
	27, // 10: merchantBasic.ListPointRuleResponse.data:type_name -> merchantBasic.ListPointRuleResponse.Data
	10, // 11: merchantBasic.ShowPointRuleResponse.data:type_name -> merchantBasic.PointRule
	28, // 12: merchantBasic.GetPointRuleAllBranchResponse.data:type_name -> merchantBasic.GetPointRuleAllBranchResponse.Data
	30, // 13: merchantBasic.GetBranchPointRuleResponse.data:type_name -> merchantBasic.GetBranchPointRuleResponse.Data
	31, // 14: merchantBasic.GetBranchPointRulesResponse.data:type_name -> merchantBasic.GetBranchPointRulesResponse.Data
	2,  // 15: merchantBasic.ListConsumeCategoryResponse.Data.data:type_name -> merchantBasic.ConsumeCategory
	10, // 16: merchantBasic.ListPointRuleResponse.Data.data:type_name -> merchantBasic.PointRule
	29, // 17: merchantBasic.GetBranchPointRuleResponse.Data.gain_rule:type_name -> merchantBasic.GetBranchPointRuleResponse.Rule
	29, // 18: merchantBasic.GetBranchPointRuleResponse.Data.use_rule:type_name -> merchantBasic.GetBranchPointRuleResponse.Rule
	22, // 19: merchantBasic.GetBranchPointRulesResponse.Data.gain_rule:type_name -> merchantBasic.PointRuleWithConsumeType
	22, // 20: merchantBasic.GetBranchPointRulesResponse.Data.use_rule:type_name -> merchantBasic.PointRuleWithConsumeType
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_proto_merchant_basic_point_proto_init() }
func file_proto_merchant_basic_point_proto_init() {
	if File_proto_merchant_basic_point_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_merchant_basic_point_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConsumeCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConsumeCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConsumeCategoryTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConsumeCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConsumeCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowConsumeCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowConsumeCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPointRuleDescribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointRuleDescribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointRuleDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePointRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePointRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPointRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPointRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowPointRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowPointRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointRuleAllBranchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchPointRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchPointRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchPointRulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointRuleWithConsumeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchPointRulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConsumeCategoryTypesResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConsumeCategoryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointRuleDescribeResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPointRuleResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPointRuleAllBranchResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchPointRuleResponse_Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchPointRuleResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_merchant_basic_point_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchPointRulesResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_merchant_basic_point_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_merchant_basic_point_proto_goTypes,
		DependencyIndexes: file_proto_merchant_basic_point_proto_depIdxs,
		MessageInfos:      file_proto_merchant_basic_point_proto_msgTypes,
	}.Build()
	File_proto_merchant_basic_point_proto = out.File
	file_proto_merchant_basic_point_proto_rawDesc = nil
	file_proto_merchant_basic_point_proto_goTypes = nil
	file_proto_merchant_basic_point_proto_depIdxs = nil
}
