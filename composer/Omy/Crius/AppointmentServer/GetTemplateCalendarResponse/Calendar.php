<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/appointment/appointment_calendar.proto

namespace Omy\Crius\AppointmentServer\GetTemplateCalendarResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>appointment.GetTemplateCalendarResponse.Calendar</code>
 */
class Calendar extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string calendar_id = 1;</code>
     */
    protected $calendar_id = '';
    /**
     * Generated from protobuf field <code>string calendar_category = 4;</code>
     */
    protected $calendar_category = '';
    /**
     * Generated from protobuf field <code>int64 business_date = 2;</code>
     */
    protected $business_date = 0;
    /**
     * Generated from protobuf field <code>string template_id = 3;</code>
     */
    protected $template_id = '';
    /**
     * Generated from protobuf field <code>string template_name = 5;</code>
     */
    protected $template_name = '';
    /**
     * Generated from protobuf field <code>string template_color = 6;</code>
     */
    protected $template_color = '';
    /**
     * Generated from protobuf field <code>repeated string theme_ids = 7;</code>
     */
    private $theme_ids;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $calendar_id
     *     @type string $calendar_category
     *     @type int|string $business_date
     *     @type string $template_id
     *     @type string $template_name
     *     @type string $template_color
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $theme_ids
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Appointment\AppointmentCalendar::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string calendar_id = 1;</code>
     * @return string
     */
    public function getCalendarId()
    {
        return $this->calendar_id;
    }

    /**
     * Generated from protobuf field <code>string calendar_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCalendarId($var)
    {
        GPBUtil::checkString($var, True);
        $this->calendar_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string calendar_category = 4;</code>
     * @return string
     */
    public function getCalendarCategory()
    {
        return $this->calendar_category;
    }

    /**
     * Generated from protobuf field <code>string calendar_category = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setCalendarCategory($var)
    {
        GPBUtil::checkString($var, True);
        $this->calendar_category = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 business_date = 2;</code>
     * @return int|string
     */
    public function getBusinessDate()
    {
        return $this->business_date;
    }

    /**
     * Generated from protobuf field <code>int64 business_date = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBusinessDate($var)
    {
        GPBUtil::checkInt64($var);
        $this->business_date = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string template_id = 3;</code>
     * @return string
     */
    public function getTemplateId()
    {
        return $this->template_id;
    }

    /**
     * Generated from protobuf field <code>string template_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTemplateId($var)
    {
        GPBUtil::checkString($var, True);
        $this->template_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string template_name = 5;</code>
     * @return string
     */
    public function getTemplateName()
    {
        return $this->template_name;
    }

    /**
     * Generated from protobuf field <code>string template_name = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setTemplateName($var)
    {
        GPBUtil::checkString($var, True);
        $this->template_name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string template_color = 6;</code>
     * @return string
     */
    public function getTemplateColor()
    {
        return $this->template_color;
    }

    /**
     * Generated from protobuf field <code>string template_color = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setTemplateColor($var)
    {
        GPBUtil::checkString($var, True);
        $this->template_color = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string theme_ids = 7;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getThemeIds()
    {
        return $this->theme_ids;
    }

    /**
     * Generated from protobuf field <code>repeated string theme_ids = 7;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setThemeIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->theme_ids = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Calendar::class, \Omy\Crius\AppointmentServer\GetTemplateCalendarResponse_Calendar::class);

