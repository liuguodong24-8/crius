<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/merchant-basic/point.proto

namespace Omy\Crius\MerchantBasicServer\GetBranchPointRuleResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>merchantBasic.GetBranchPointRuleResponse.Data</code>
 */
class Data extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.merchantBasic.GetBranchPointRuleResponse.Rule gain_rule = 1;</code>
     */
    protected $gain_rule = null;
    /**
     * Generated from protobuf field <code>.merchantBasic.GetBranchPointRuleResponse.Rule use_rule = 2;</code>
     */
    protected $use_rule = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Omy\Crius\MerchantBasicServer\GetBranchPointRuleResponse\Rule $gain_rule
     *     @type \Omy\Crius\MerchantBasicServer\GetBranchPointRuleResponse\Rule $use_rule
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\MerchantBasic\Point::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.merchantBasic.GetBranchPointRuleResponse.Rule gain_rule = 1;</code>
     * @return \Omy\Crius\MerchantBasicServer\GetBranchPointRuleResponse\Rule|null
     */
    public function getGainRule()
    {
        return $this->gain_rule;
    }

    public function hasGainRule()
    {
        return isset($this->gain_rule);
    }

    public function clearGainRule()
    {
        unset($this->gain_rule);
    }

    /**
     * Generated from protobuf field <code>.merchantBasic.GetBranchPointRuleResponse.Rule gain_rule = 1;</code>
     * @param \Omy\Crius\MerchantBasicServer\GetBranchPointRuleResponse\Rule $var
     * @return $this
     */
    public function setGainRule($var)
    {
        GPBUtil::checkMessage($var, \Omy\Crius\MerchantBasicServer\GetBranchPointRuleResponse\Rule::class);
        $this->gain_rule = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.merchantBasic.GetBranchPointRuleResponse.Rule use_rule = 2;</code>
     * @return \Omy\Crius\MerchantBasicServer\GetBranchPointRuleResponse\Rule|null
     */
    public function getUseRule()
    {
        return $this->use_rule;
    }

    public function hasUseRule()
    {
        return isset($this->use_rule);
    }

    public function clearUseRule()
    {
        unset($this->use_rule);
    }

    /**
     * Generated from protobuf field <code>.merchantBasic.GetBranchPointRuleResponse.Rule use_rule = 2;</code>
     * @param \Omy\Crius\MerchantBasicServer\GetBranchPointRuleResponse\Rule $var
     * @return $this
     */
    public function setUseRule($var)
    {
        GPBUtil::checkMessage($var, \Omy\Crius\MerchantBasicServer\GetBranchPointRuleResponse\Rule::class);
        $this->use_rule = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Data::class, \Omy\Crius\MerchantBasicServer\GetBranchPointRuleResponse_Data::class);

